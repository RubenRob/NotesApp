{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/notes/notes.component.ts","webpack:///src/app/notes/notes.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","APIService","http","getUsers","get","route","getUser","userName","addUser","post","delUser","userId","getCategories","getCategoriesOfUser","addCategoryForUser","description","color","delCategoriesOfUser","categoryId","getNotes","getNotesOfUser","getNotesOfUserWithCategoryFilter","addNoteForUser","content","updateNoteOfUser","noteId","patch","delNoteOfUser","providedIn","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","apiService","title","actieveGebruiker","gebruikers","notities","notitiesGebruiker","notitiesGebruikerMetQueryOpNotes","categorien","zoekString","gevondenNotities","gevondenNotitiesFilter","categorienVanGebruiker","filterCategorie","apiServiceApp","subscribe","data","console","log","userid","addCategoriesForUser","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HomeComponent","ApiService","message0","message1","message2","message3","message4","message5","message6","loginUserName","userExists","categoriesOfUser","selectedFilterCategoryFilter","selectedNotesCategory","notesOfUser","notes","addUserClicked","newUserName","addcategoryClicked","categoryDescriptionNew","colorCategorie","addNoteClicked","noteContent","messageSelectedNote","changeNoteClicked","filterOn","filteredNotes","substring","notesWithSubstring","activeUser","name","undefined","length","error","value","event","target","categoryColor","setAddCategoryClicked","note","forEach","category","setAddNoteClicked","selectedNote","setChangeNoteClicked","push","includes","NotesComponent","loginUser","notitieshalen","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable, Component } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class APIService {\n\n  route;\n  \n  constructor(private http: HttpClient) { \n    this.route = 'https://jensjorisdecorte-backend-example-4.glitch.me'\n  }\n\n  //\n  //bewerkingen op \"/users\"\n  //\n  \n  //haal de lijst van alle gebruikers op\n  getUsers = () => {\n    return this.http.get(this.route + \"/users\");\n  }\n  //haal een gebruiker op\n  getUser = (userName: string) => {\n    return this.http.get(this.route + \"/users/\"+userName);\n  }\n  //voeg een gebruiker toe\n  addUser = (userName: string) => {\n    return this.http.post(this.route + \"/users\", {userName: userName});\n  }\n  //verwijder een gebruiker\n  delUser = (userId: number) => {\n    return this.http.delete(this.route + \"/users?userId=\" + userId);\n  }\n\n  //\n  //bewerkingen op \"/Categories\"\n  //\n\n  //haal de lijst van alle categorien op\n  getCategories = () => {\n    return this.http.get(this.route + \"/categories\");\n  }\n  //haal de lijst van alle categorien van een gebruiker op\n  getCategoriesOfUser = (userId: number) => {\n    return this.http.get(this.route + \"/users/\"+userId+\"/categories\");\n  }\n  //voeg een categorie toe voor een bepaalde gebruiker\n  addCategoryForUser = ( userId: number, description: string, color: string) => {\n    return this.http.post(this.route + \"/users/\"+userId+\"/categories\", {description: description, color: color});\n  }\n  //verwijder een gebruiker\n  delCategoriesOfUser = (categoryId: number) => {\n    return this.http.delete(this.route + \"/categories?categoryId=\" + categoryId);\n  }\n\n  //\n  //bewerkingen op \"/notes\"\n  //\n  \n  //haal de lijst van alle notities op\n  getNotes = () => {\n    return this.http.get(this.route + \"/notes\");\n  }\n  //haal de lijst van alle notities van een gebruiker op\n  getNotesOfUser = (userId: number) => {\n    return this.http.get(this.route + \"/users/\"+userId+\"/notes\");\n  }\n  //haal de lijst van alle notities van een gebruiker op\n  getNotesOfUserWithCategoryFilter = (userId: number, categoryId: number) => {\n    return this.http.get(this.route + \"/users/\"+userId+\"/categories/\"+categoryId+\"/notes\");\n  }\n  //voeg een notitie toe voor een bepaalde gebruiker\n  addNoteForUser = ( userId: number, categoryId: number, content: string) => {\n    return this.http.post(this.route + \"/users/\"+userId+\"/categories/\"+categoryId+\"/notes\", {content: content});\n  }\n  //voeg een notitie toe voor een bepaalde gebruiker\n  updateNoteOfUser = ( noteId: number, categoryId: number, content: string) => {\n    return this.http.patch(this.route + \"/notes/\"+noteId, {categoryId: categoryId, content: content});\n  }\n  //voeg een notitie toe voor een bepaalde gebruiker\n  delNoteOfUser = ( noteId: number) => {\n    return this.http.delete(this.route + \"/notes?noteId=\" + noteId);\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\n  { path: 'home', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder } from '@angular/forms';\nimport { APIService } from './api.service';\nimport { HomeComponent } from './home/home.component';\n\ninterface User\n{\n  id: Number;\n  name: String;\n}\ninterface Gebruiker\n{\n  id: Number;\n  name: String;\n}\ninterface Notitie\n{\n  id: Number;\n  content: String;\n  userId: Number;\n  noteCategoryId: Number;\n}\ninterface Category\n{\n  id: Number;\n  description: String;\n  userId: Number;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent \n{\n  title = 'NotesApp';\n  private apiServiceApp;\n  route;\n  actieveGebruiker = \"Gina\";\n\n  nieuweGebruiker: string; //naam van een nieuw toe te voegen gebruiker\n  gebruiker: string;\n\n  messageGebruikerToevoegen;\n  messageGebruikerBestaat;\n  messageGebruikerVerwijderen;\n\n  gebruikers: Gebruiker[] = [];\n  notities: Notitie[] = [];\n  notitiesGebruiker: Notitie[] = [];\n  notitiesGebruikerMetQueryOpNotes: Notitie[] = [];\n  categorien: Category[] =  [];\n\n  naamToevoegen;\n  naamOpzoeken;\n  naamVerwijderen;\n  zoekString = \"Marc\";\n\n  naamNotitieToevoegen;\n  naamNotitieTonen;\n  inhoudNotitieToevoegen;  \n  categorieNotitieToevoegen;\n  \n  gevondenNotities: Notitie[] = [];\n  gevondenNotitiesFilter: Notitie[] = [];\n  categorienVanGebruiker: Category[] = [];\n  omschrijvingCategorieToevoegen;\n  naamCategorieToevoegen;\n  filterCategorie=\"prive\";\n\n  constructor(apiService: APIService)\n  {\n    this.apiServiceApp = apiService;\n    //this.vulDatabaseMetMockDataUsers();\n    //this.vulDatabaseMetMockDataCategories();\n    //this.vulDatabaseMetMockDataNotes();\n  }  \n  \n  ngOnInit(): void {\n   }\n\n  // //\n  // //bewerkingen op \"/users\"\n  // //\n  \n  // //haal de lijst van alle gebruikers op\n  // lijstGebruikers = () => {\n  //   this.apiServiceApp.getUsers().subscribe((data: Gebruiker[]) => {\n  //     console.log(data);   \n  //     this.gebruikers = data;\n  //     })\n  // }\n  // //voeg een gebruiker toe\n  // toevoegenGebruiker = () => {\n  //   this.apiServiceApp.addUser(this.nieuweGebruiker).subscribe((data) => {\n  //     console.log(data);\n  //     if(data.error == null)\n  //       this.messageGebruikerToevoegen = data.success;\n  //     else\n  //       this.messageGebruikerToevoegen = data.error;\n  //   });\n  //   this.nieuweGebruiker = \"\";\n  // }\n  // //checkt of een gebruiker reeds bestaat\n  // bestaatGebruiker = () =>{\n  //   this.apiServiceApp.getUser(this.gebruiker).subscribe((data) => {\n  //     console.log(data);\n  //     if(data.error == null)\n  //       this.messageGebruikerBestaat = data.success;\n  //     else\n  //       this.messageGebruikerBestaat = data.error;\n  //   });    \n  //   this.gebruiker = \"\";\n  // }\n  // //verwijder een gebruiker\n  // verwijderenGebruiker = () => {\n  //   this.apiServiceApp.deleteUser(this.naamVerwijderen).subscribe((data) => {\n  //       console.log(data);\n  //       if(data.error == null)\n  //         this.messageGebruikerVerwijderen = data.success;\n  //       else\n  //         this.messageGebruikerVerwijderen = data.error;\n  //   });\n  //   this.lijstGebruikers();\n  //   this.naamVerwijderen = \"\";\n  // }\n\n  // //\n  // //bewerkingen op \"/notescategory\"\n  // //\n\n  // //haal de lijst van alle categorien op\n  // lijstCategorie = () =>{\n  //   this.apiServiceApp.getCategories().subscribe((data: Category[]) => {\n  //     console.log(data);\n  //     this.categorien = data;\n  //   })\n  // }\n  // //haal de lijst van alle categorien op\n  // lijstCategorienVanGebruiker = () =>{\n  //   this.apiServiceApp.getCategoriesFromUser(this.actieveGebruiker).subscribe((data: Category[]) => {\n  //     console.log(data);\n  //     this.categorienVanGebruiker = data;\n  //   })\n  // }\n  // //voeg een categorie toe\n  // toevoegenCategorie = () =>{\n  //   this.apiServiceApp.addCategory(this.naamCategorieToevoegen, this.omschrijvingCategorieToevoegen).subscribe((data) => {\n  //     console.log(data);\n  //     if(data.error == null)\n  //       this.messageGebruikerBestaat = data.success;\n  //     else\n  //       this.messageGebruikerBestaat = data.error;\n  //   });    \n  // }\n\n  // //\n  // //bewerkingen op \"/Notes\"\n  // //\n\n  // //haal de lijst van alle notities op\n  // lijstNotities = () => {\n  //   this.apiServiceApp.getNotes().subscribe((data: Notitie[]) => {\n  //        console.log(data);\n  //       this.notities = data;\n  //     })\n  // }\n  // //haal de lijst van alle notities op voor een bepaalde gebruiker\n  // lijstNotitiesVanGebruiker = () => {\n  //   this.notitiesVanGebruikerFilterenOpCategorie();\n  //   //this.apiServiceApp.getNotesFromUser(this.actieveGebruiker).subscribe((data: Notitie[]) => {\n  //    // console.log(data);\n  //    //this.notitiesGebruiker = data;\n  //   //});\n  //   this.naamNotitieTonen = \"\";\n  // }\n  // //voeg een notitie toe een bepaalde gebruiker\n  // toevoegenNotitieVoorGebruiker = () => {\n  //   this.apiServiceApp.addNoteForUser(this.naamNotitieToevoegen, this.inhoudNotitieToevoegen,this.categorieNotitieToevoegen).subscribe((data) => {\n  //     console.log(data);\n  //   });\n  //   this.naamNotitieToevoegen = \"\";\n  //   this.inhoudNotitieToevoegen = \"\";\n  //   this.categorieNotitieToevoegen = \"\";\n  // }\n  // notitiesVanGebruikerDieZoekStringBevatten() {\n  //   this.notitiesVanGebruikerFilterenOpCategorie();\n  //   // this.apiServiceApp.getNotesWithSubstringFromUser(this.actieveGebruiker, this.zoekString).subscribe((data: Notitie[]) => {\n  //   //   console.log(data);\n  //   //  this.gevondenNotities = data;\n  //   // });\n  //   this.zoekString = \"\";\n  // }\n  // notitiesVanGebruikerFilterenOpCategorie() {\n  //   this.apiServiceApp.getNotesWithSubstringFromUser(this.actieveGebruiker, this.zoekString, this.filterCategorie).subscribe((data: Notitie[]) => {\n  //     console.log(data);\n  //    this.gevondenNotitiesFilter = data;\n  //   });\n  // }\n  \n  userid;\n  //nep data om de functies te controleren\n    vulDatabaseMetMockDataUsers() {\n\n      this.apiServiceApp.addUser(\"Gina\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Gina\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"prive\").subscribe((data) => {\n          console.log(data);})\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Chantal\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Chantal\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"prive\").subscribe((data) => {\n          console.log(data);})\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})        \n        })\n      })\n      this.apiServiceApp.addUser(\"Sonja\").subscribe((data) => {\n        console.log(data);\n      this.apiServiceApp.getUser(\"Sonja\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Thierry\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Karel\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Karel\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"prive\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Tim\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Marie\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Marie\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Jonathan\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Ilse\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Ilse\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Isabel\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Peter\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"David\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Geert\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Tom\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Tom\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"prive\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n    }\n    vulDatabaseMetMockDataCategories() {\n    }\n    vulDatabaseMetMockDataNotes() {\n      this.apiServiceApp.addNoteForUser(\"Gina\", \"bureau kuisen\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Gina\", \"facebook checken\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Gina\", \"boodschappen doen\",\"prive\").subscribe((data) => {\n        console.log(data);})          \n      this.apiServiceApp.addNoteForUser(\"Chantal\", \"bureau kuisen\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Chantal\", \"facebook checken\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Chantal\", \"dochter bellen\",\"prive\").subscribe((data) => {\n        console.log(data);})        \n      this.apiServiceApp.addNoteForUser(\"Sonja\", \"facturen bezorgen\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Karel\", \"personeel beoordelen\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Karel\", \"avondje uit\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Marie\", \"les gaan volgen\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Tom\", \"vrouw bellen\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Ilse\", \"infobrochure verspreiden\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n    }\n}","  \n<router-outlet></router-outlet>","\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ColorPickerModule  } from 'ngx-color-picker';\n\nimport { AppComponent } from './app.component';\n\nimport { HomeComponent } from './home/home.component';\nimport { NotesComponent } from './notes/notes.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NotesComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ColorPickerModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, FormControl } from '@angular/forms';\n\nimport { APIService } from '../api.service';\nimport { ColorFormats } from 'ngx-color-picker/lib/formats';\n\ninterface User {\n  id: number;\n  name: string;\n}\ninterface Note {\n  id: number;\n  content: string;\n  userId: number;\n  categoryId: number;\n}\ninterface Category {\n  id: number;\n  description: string;\n  color: string;\n  userId: number;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n\n  private apiService: APIService;\n    \n  constructor(ApiService: APIService) {\n    this.apiService = ApiService;\n  } \n\n  ngOnInit() {\n  }\n\n  //info strartscherm\n  message0: string = \"Welkom bij notesApp\";\n  message1: string = \"Geef uw gebruikersnaam in om in te loggen.\";\n  message2: string = \"Nieuwe gebruiker?  Maak een account aan.\";\n  message3: string = \"Geef hier de naam van uw categorie in\";\n  message4: string = \"In welke kleur wilt u de categorie weergeven\";\n  message5: string = \"Vul hier uw notitie in\";\n  message6: string = \"Kies uw notitiecategorie\";\n  loginUserName: string = \"Emiel\";\n  //userExists is false wanneer loginUserName niet gekend is\n  userExists: boolean = false;\n  //gebruiker met naam loginUserName\n  activeUser: User;\n  //categoriën van gebruiker\n  categoriesOfUser: Category[] = [];\n  //categoryListEmpty: boolean = true;\n  //geselecteerde categorie staat standaard op -1: --- kies een categorie ---\n  selectedFilterCategoryFilter: number = -1;\n  //geselecteerde categorie staat standaard op -1: --- kies een categorie ---\n  selectedNotesCategory: number = -1;\n  //kleurlijst weergave categoriën\n  categoryColor;\n  //notities van gebruiker\n  notesOfUser: Note[] = [];\n  //lijst van weer te geven notities\n  notes: Note[] = [];\n\n  //controleer of de ingegeven naam bestaat en ga de gegevens van die gebruiker ophalen  \n  getUser() {\n    this.apiService.getUser(this.loginUserName).subscribe((data: User) => {\n      console.log(data);\n      this.activeUser= data;\n      if(this.activeUser.name === undefined) {\n        this.userExists= false;\n        this.message1= \"Gebruiker \" + this.loginUserName + \" is niet gekend!  Probeer opnieuw of maak een account aan.\";\n        return;\n      }\n        else {\n          this.userExists= true;\n          this.message0= \"Welkom \" + this.activeUser.name;\n          this.loginUserName=\"\";\n        }\n      this.apiService.getCategoriesOfUser(this.activeUser.id).subscribe((data: Category[]) => {\n        console.log(data);\n        this.categoriesOfUser = data;\n        if(data.length == 0) {\n          //this.categoryListEmpty = true;\n          this.message2 = \"U moet eerst een categorie aanmaken om een nieuwe notitie te kunnen toevoegen.\";\n        }\n        else{\n          //this.categoryListEmpty = false;\n          this.message2 = \"\";\n        }\n      })\n      this.apiService.getNotesOfUser(this.activeUser.id).subscribe((data: Note[]) => {\n        console.log(data);\n        //notesOfUser is de lijst met alle notities van de gebruiker\n        this.notesOfUser = data;\n        //notes is de lijst met weer te geven notities\n        this.notes=data;\n        if(data.length == 0) {\n          this.message1 = \"U heeft nog geen notities om weer te geven.\";\n        }\n        else{\n          //this.categoryListEmpty = false;\n          this.message1 = \"\";\n        }\n      })\n    })\n  }\n  \n  //velden voor de nieuwe account weergeven\n  addUserClicked: boolean = false;\n  newUserName: string = \"\";\n  addUserShowInputField(){\n    this.addUserClicked = true;\n    this.newUserName = this.loginUserName;\n    this.loginUserName = \"\";\n  }\n  //gebruiker toevoegen\n  addUser() {\n    this.loginUserName=\"\";\n    this.apiService.addUser(this.newUserName).subscribe((error) => {\n      console.log(error);\n      //zonder fout is de gebruiker geregistreerd\n      if(error != \"User already exists\") {\n        this.message1 = \"U bent geregistreerd, geef uw gebruikersnaam in om in te loggen.\";\n        this.loginUserName=this.newUserName;\n        this.addUserClicked = false;\n        this.message2 = \"Nieuwe gebruiker?  Maak een account aan.\"\n      }\n      else {\n        this.message2 = \"Deze loginnaam bestaat al, gelieve een andere te kiezen.\"\n      }\n    })\n  }\n  logOff(){\n    this.message0 = \"Welkom bij notesApp\";\n    this.message1 = \"Geef uw gebruikersnaam in om in te loggen.\";\n    this.message2 = \"Nieuwe gebruiker?  Maak een account aan.\";\n    this.activeUser = null;\n    this.categoriesOfUser = [];\n    this.notesOfUser = [];\n    this.notes = [];\n    this.userExists = false;\n  }\n  deleteUser(){\n    this.apiService.delUser(this.activeUser.id).subscribe((data) => {\n      console.log(data);\n    })\n    this.message0 = \"Welkom bij notesApp\";\n    this.message1 = \"Geef uw gebruikersnaam in om in te loggen.\";\n    this.message2 = \"Nieuwe gebruiker?  Maak een account aan.\";\n    this.activeUser = null;\n    this.categoriesOfUser = [];\n    this.notesOfUser = [];\n    this.notes = [];\n    this.userExists = false;\n  }\n\n  //eenmaal ingelogd\n  //velden voor de nieuwe categorie weergeven\n  addcategoryClicked: boolean = false;\n  categoryDescriptionNew: string = \"\";\n  setAddCategoryClicked(value) {\n    this.addcategoryClicked = value;\n  }  \n  //geselecteerde filter ophalen\n  noteCategory(event){\n    this.selectedNotesCategory= event.target.value;\n  }\n  addCategory() {\n    if(this.categoryColor==undefined){\n      this.message4=\"U moet een kleur selecteren\";\n      return;\n    }\n    if(this.categoryDescriptionNew==\"\"){\n      this.message3=\"U heeft geen categorie ingegeven\";\n      return;\n    }\n    this.apiService.addCategoryForUser(this.activeUser.id, this.categoryDescriptionNew,this.categoryColor).subscribe((data) => {\n      console.log(data);\n      this.apiService.getCategoriesOfUser(this.activeUser.id).subscribe((data: Category[]) => {\n        console.log(data);\n        this.categoriesOfUser = data;\n        //als alles goed ging is de lijst nu niet meer leeg\n        if(data.length == 0) {\n          //this.categoryListEmpty = true;\n          this.selectedNotesCategory = 1;\n          this.message1 = \"U heeft nog geen notities om weer te geven.\";\n          this.message2 = \"U moet eerst een categorie aanmaken om een nieuwe notitie te kunnen toevoegen.\";\n        }\n        else{\n          //this.categoryListEmpty = false;\n          this.message2 = \"\";\n          this.setAddCategoryClicked(false);\n          this.categoryDescriptionNew = \"\";\n        }\n      })\n    })\n  }\n  //haal de kleur van de categorie op\n  colorCategorie: string = \"\";\n  getColor(note): string {      \n    this.categoriesOfUser.forEach(category => {\n      if(category.id == note.categoryId) {\n      this.colorCategorie = category.color;\n      }\n    });\n    return this.colorCategorie;\n  }\n  \n  //velden voor de nieuwe notitie weergeven\n  addNoteClicked: boolean = false;\n  noteContent: string = \"\";\n  setAddNoteClicked(value) {\n    this.addNoteClicked = value;\n  }\n  addNote() {\n    if(this.selectedNotesCategory == -1) {\n      this.message6 = \"U moet een categorie selecteren\";\n      return;\n    }\n    if(this.noteContent == \"\") {\n      this.message5 =\"Uw heeft geen notitie ingegeven\";\n      return;\n    }\n    this.apiService.addNoteForUser(this.activeUser.id, this.selectedNotesCategory, this.noteContent).subscribe((data) => {\n      console.log(data);\n      this.selectedNotesCategory = -1;\n      this.noteContent = \"\";\n      this.apiService.getNotesOfUser(this.activeUser.id).subscribe((data: Note[]) => {\n        console.log(data);\n        //notesOfUser is de lijst met alle notities van de gebruiker\n        this.notesOfUser = data;\n        //notes is de lijst met weer te geven notities\n        this.notes=data;\n        if(data.length == 0) {\n          this.message1 = \"U heeft nog geen notities om weer te geven.\";\n        }\n        else{\n          this.setAddNoteClicked(false);\n          this.message1 = \"\";\n        }\n      })\n    })\n    }\n    //geselecteerde notitie om te bewerken of te verwijderen\n    messageSelectedNote: string = \"deze notitie kan worden bewerkt of verwijderd\"\n    selectedNote: Note;\n    changeNoteClicked: boolean = false;\n    setChangeNoteClicked(value) {\n      console.log(\"changeNote:\" + this.selectedNote.content + \" \" + this.selectedNote.categoryId);\n      this.noteContent = this.selectedNote.content\n      this.selectedNotesCategory = this.selectedNote.categoryId\n      this.addNoteClicked = value;\n      this.changeNoteClicked = value;\n    }\n    onNoteClick(note) {\n      this.selectedNote = note;\n      console.log(this.selectedNote.id);\n    }\n    changeNote(){      \n      if(this.selectedNotesCategory == -1) {\n        this.message6 = \"U moet een categorie selecteren\";\n        return;\n      }\n      if(this.noteContent == \"\") {\n        this.message5 =\"Uw heeft geen notitie ingegeven\";\n        return;\n      }\n      this.apiService.updateNoteOfUser(this.selectedNote.id, this.selectedNotesCategory, this.noteContent).subscribe((data) => {\n        console.log(data);\n        this.selectedNotesCategory = -1;\n        this.noteContent = \"\";\n        this.apiService.getNotesOfUser(this.activeUser.id).subscribe((data: Note[]) => {\n          console.log(data);\n          //notesOfUser is de lijst met alle notities van de gebruiker\n          this.notesOfUser = data;\n          //notes is de lijst met weer te geven notities\n          this.notes=data;\n          if(data.length == 0) {\n            this.message1 = \"Oeps, hier ging iets mis.\";\n          }\n          else{\n            this.setAddNoteClicked(false);\n            this.setChangeNoteClicked(false);\n            this.message1 = \"\";\n          }\n        })\n      })\n    }\n\n    deleteNote(){\n      this.apiService.delNoteOfUser(this.selectedNote.id).subscribe((data) => {\n        console.log(data);\n        this.apiService.getNotesOfUser(this.activeUser.id).subscribe((data: Note[]) => {\n          console.log(data);\n          //notesOfUser is de lijst met alle notities van de gebruiker\n          this.notesOfUser = data;\n          //notes is de lijst met weer te geven notities\n          this.notes=data;\n          if(data.length == 0) {\n            this.message1 = \"U heeft nog geen notities om weer te geven.\";\n          }\n          else{\n            this.setAddNoteClicked(false);\n            this.message1 = \"\";\n          }\n        })\n      })\n    }\n  \n\n  //Filters wissen\n  //lijst notities tonen\n  showAllNotes(){\n    this.notes= this.notesOfUser;\n    this.filterOn=false;\n    this.selectedFilterCategoryFilter = -1;\n  }\n  \n  //Filter op categorie\n  //geselecteerde filter ophalen\n  filterCategory(event){\n    this.selectedFilterCategoryFilter= event.target.value;\n  }\n  filterOn=false;\n  filteredNotes: Note[]=[];\n  filterNotes(){\n    this.substring=\"\";\n    //if(this.selectedFilterCategoryFilter == -1) {\n    //  this.filterOn=false;\n    //  return;\n    //}\n    //if(this.filterOn) {\n    //  this.notes= this.notesOfUser;\n    //}\n    this.notesOfUser.forEach(note => {\n      if(note.categoryId == this.selectedFilterCategoryFilter) {\n        this.filteredNotes.push(note);\n      }\n    });\n    this.notes=this.filteredNotes;\n    //this.filterOn=true;\n    this.filteredNotes=[];\n}\n\n  //Filter op substring\n  substring: string = \"\";\n  notesWithSubstring: Note[]=[];\n  searchNotesWithSubstring() {\n    this.notes.forEach(note => {\n      if(note.content.includes(this.substring)) {\n        this.notesWithSubstring.push(note);\n      }\n    });\n    this.notes=this.notesWithSubstring;\n    //this.substring=\"\";\n    this.notesWithSubstring=[];\n  }\n\n  //voor een eventuele administrator\n  //gebruikers\n  getUsers() {\n     this.apiService.getUsers().subscribe((data: User[]) => {\n       console.log(data);\n     })\n   }\n\n  //categoriën\n  getCategories() {\n    this.apiService.getCategories().subscribe((data: Category[]) => {\n      console.log(data);\n     })\n    }\n  //notities\n  getNotes() {\n    this.apiService.getNotes().subscribe((data: Note[]) => {\n      console.log(data);\n    })\n  }\n}\n","<h2>{{message0}}</h2>\n\n<!-- <button style=\"width: 200px\" (click)=\"getNotes()\">alle notities</button>\n<button style=\"width: 200px\" (click)=\"getCategories()\">alle categoriën</button>\n<button style=\"width: 200px\" (click)=\"getUsers()\">alle gebruikers</button> -->\n\n<div>  \n  <!-- loginscherm -->\n  <ng-container *ngIf=\"!userExists; then loginContent; else activeUserContent\">\n  </ng-container>\n  \n  <!-- loginscherm -->\n  <!-- gebruiker is nog niet ingelogd -->\n  <ng-template #loginContent>\n    <h4>{{message1}}</h4>\n    <label>Gebruikersnaam</label>\n    <br>\n    <input style=\"width: 196px\" type=\"text\" [(ngModel)]=\"loginUserName\"/>\n    <br>\n    <button style=\"width: 200px\" (click)=\"getUser()\">inloggen</button>\n    <h4>{{message2}}</h4>\n    <div>\n      <!-- nieuw account aanmaken -->\n      <ng-container *ngIf=\"!addUserClicked; then noNewUser; else newUser\">\n      </ng-container>\n\n      <!-- geen nieuw account aanmaken -->\n      <ng-template #noNewUser>\n        <button style=\"width: 200px\" (click)=\"addUserShowInputField()\">nieuwe account</button>\n      </ng-template>\n      \n      <!-- wel nieuw account aanmaken -->\n      <ng-template #newUser>\n        <label>gebruikersnaam</label>\n        <br>\n        <input  style=\"width: 196px\" type=\"text\" [(ngModel)]=\"newUserName\"/>\n        <button  style=\"width: 200px\"(click)=\"addUser()\">account aanmaken</button>\n      </ng-template>\n    </div>\n  </ng-template>\n  \n  <!-- userscherm -->\n  <!-- gebruiker is ingelogd -->\n  <ng-template #activeUserContent>\n    <table>\n      <tr>\n        <!--lijst van de notities, linkerkolom-->\n        <td valign=\"top\">\n          <table>\n            <tr>\n              <td style=\"width: 200px\">\n                <!-- nieuwe notitie aanmaken -->\n                <ng-container *ngIf=\"!addNoteClicked; then noNewNote; else newNote\">\n                </ng-container>\n                \n                <!-- geen nieuwe notitie aanmaken -->\n                <ng-template #noNewNote>\n                  <button style=\"width: 200px\" (click)=\"setAddNoteClicked(true)\" [disabled]=\"categoriesOfUser.length==0\">nieuwe notitie aanmaken</button>\n                  <button style=\"width: 200px\" (click)=\"setChangeNoteClicked(true)\" [disabled]=\"notesOfUser.length==0\">notitie bewerken</button>\n                  <button style=\"width: 200px\" (click)=\"deleteNote()\" [disabled]=\"notesOfUser.length==0\">notitie verwijderen</button>\n                </ng-template>\n                \n                <!-- wel nieuwe notitie aanmaken -->\n                <ng-template #newNote>\n                  <label>{{message5}}</label>\n                  <br>\n                  <input  style=\"width: 196px\" type=\"text\"  select=\"true\" [disabled]=\"categoriesOfUser.length==0\" [(ngModel)]=\"noteContent\"/>\n                  <br>\n                  <label>{{message6}}</label>\n                  <br>\n                  <select style=\"width: 200px\" [(ngModel)]=\"selectedNotesCategory\" (change)=\"noteCategory($event)\">\n                    <option value=-1 >--- Kies een categorie ---</option>\n                    <option *ngFor=\"let category of categoriesOfUser\" value={{category.id}}>{{ category.description }}</option>\n                  </select>\n                  <br>\n                    <!--notitie toevoegen of notitie wijzigen-->\n                    <ng-container *ngIf=\"!changeNoteClicked; then noNewNoteButton; else newNoteButton\">\n                    </ng-container>\n                \n                    <!-- button notitie maken -->\n                    <ng-template #noNewNoteButton>\n                    <button style=\"width: 200px\" (click)=\"addNote()\">notitie toevoegen</button>\n                    </ng-template>\n                    \n                    <!-- button notitie aanpassen -->\n                    <ng-template #newNoteButton>\n                      <button style=\"width: 200px\" (click)=\"changeNote()\">notitie wijzigen</button>\n                    </ng-template>\n                </ng-template>\n              </td>\n            </tr>\n            <tr>\n              <td><br></td>\n            </tr>\n            <tr>\n              <td style=\"width: 200px\">\n                <!-- nieuwe categorie aanmaken -->\n                <ng-container *ngIf=\"categoriesOfUser.length!=0 && !addcategoryClicked; then noNewCategory; else newCategory\">\n                </ng-container> \n                <!-- geen nieuwe categorie aanmaken -->\n                <ng-template #noNewCategory>\n                  <button style=\"width: 200px\"  (click)=\"setAddCategoryClicked(true)\">nieuwe categorie aanmaken</button>\n                </ng-template>\n  \n                <!-- wel nieuwe categorie aanmaken -->\n                <ng-template #newCategory>\n                  {{message3}}\n                  <br>\n                  <input   style=\"width: 196px\"  type=\"text\"  [(ngModel)]=\"categoryDescriptionNew\"/>\n                  <br>\n                  {{message4}}\n                  <br>\n                  <input   style=\"width: 196px\" [(colorPicker)]=\"categoryColor\" [style.background]=\"categoryColor\"/>\n                  <br>\n                  <button style=\"width: 200px\"  (click)=\"addCategory()\">maak categorie</button>\n                  <br>\n                </ng-template>   \n              </td>\n            </tr>\n            <tr>\n              <td><br></td>\n            </tr>\n            <tr>\n              <td><br></td>\n            </tr>\n            <tr>\n              <td>Filteren op categorie                \n              </td>\n            </tr>\n            <tr>\n              <td><select style=\"width: 200px\" [(ngModel)]=\"selectedFilterCategoryFilter\" (change)=\"filterCategory($event)\" [disabled]=\"notesOfUser.length==0\">\n                <option value=-1 >--- Kies een categorie ---</option>\n                <option [ngStyle]=\"{'background-color': category.color}\" *ngFor=\"let category of categoriesOfUser\" value={{category.id}}>{{ category.description }}</option>\n              </select>  \n              <br> \n              <button style=\"width: 200px\" (click)=\"filterNotes()\" [disabled]=\"notesOfUser.length==0\">filter toepassen</button>            \n              </td>\n            </tr>\n            <tr>\n              <td><br></td>\n            </tr>\n            <tr>\n              <td>Filteren op inhoud            \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <input style=\"width: 196px\" [(ngModel)]=\"substring\" [disabled]=\"notesOfUser.length==0\"/>\n              <br> \n              <button style=\"width: 200px\" (click)=\"searchNotesWithSubstring()\" [disabled]=\"notesOfUser.length==0\">zoeken</button>            \n              </td>\n            </tr>\n            <tr>\n              <td><button style=\"width: 200px\" (click)=\"showAllNotes()\" [disabled]=\"notesOfUser.length==0\">alle filters wissen</button>\n              </td>\n            </tr>\n            <!--afmelden / uitschrijven-->\n            <tr>\n              <td><br></td>\n            </tr>\n            <tr>\n              <td><button style=\"width: 200px\" (click)=\"logOff()\">afmelden</button>            \n              </td>\n            </tr>\n            <tr>\n              <td><button style=\"width: 200px\" (click)=\"deleteUser()\">uitschrijven</button>\n              </td>\n            </tr>\n          </table>\n        </td>\n        <td valign=\"top\">\n          <!--lijst van de notities, rechterkolom-->\n          <table>\n            <td  style=\"width: 200px\" valign=\"top\">\n              <ng-container *ngIf=\"notesOfUser.length!=0; then notesToShow; else noNotesToShow\">\n              </ng-container>\n              <!--als de lijst niet leeg is-->\n              <ng-template #notesToShow> \n                <label>Klik op de notitie die u wenst te bewerken of verwijderen</label>\n                <div *ngFor=\"let note of notes\" >\n                <button [ngStyle]=\"{'background-color':getColor(note)}\" style=\"width: 500px\" (click)=\"onNoteClick(note)\">{{note.content}}</button>      \n                {{messageSelectedNote}}\n                </div>\n              </ng-template>\n               <!--als de lijst leeg is-->\n              <ng-template #noNotesToShow>\n                {{message1}}\n                <br>\n                {{message2}}\n              </ng-template>    \n              </td>\n          </table>\n        </td>\n      </tr>        \n    </table>\n   <!-- <app-notes [loginUser] = \"loginUser\"></app-notes> -->\n  </ng-template>\n  <!-- loginscherm -->\n  \n\n\n  <!-- op te kuisen -->\n  <table>\n    <tr>\n      <!-- <td>\n        <table>\n          <tr>\n              <li *ngFor=\"let note of notes;let i = index\" (click)=\"onNoteClick(note.id, note.categoryId, note.content)\">                             \n                <button [ngStyle]=\"{'background-color':getColor(note)}\" style=\"width: 50%\">{{note.content}}</button>\n                </li>\n          </tr>\n        </td>\n          <tr>\n            <td><hr>filteren op categorie:</td>\n          </tr>\n          <tr>\n            <td>\n              <select  [(ngModel)]=\"selectedFilterCategorie\" (change)=\"filterCategory($event)\">\n                <option value=-1 >--- Kies een categorie ---</option>\n                <option  *ngFor=\"let category of categoriesOfUser\" value={{category.id}}>{{ category.description }}</option>\n              </select>\n            </td>\n          </tr>\n          <tr>\n            <td><button (click)=\"filterCategoryToepassen()\">Filter toepassen</button></td>\n          </tr>  \n          \n          <tr>\n            <td><hr>Zoeken op content:</td>\n          </tr>\n          <tr>\n            <td>\n              <input [(ngModel)]=\"substring\"/>\n            </td>\n          </tr>\n          <tr>\n            <td><button (click)=\"NotitiesMetZoekstringZoeken()\">Notities zoeken</button></td>\n          </tr>      \n        </table>\n      </td>\n      <td>\n        <table>\n          <tr>\n            <td>Notitie toevoegen</td>\n            <td>\n              <input [(ngModel)]=\"content\"/>\n            </td>\n            <td>\n              <select [(ngModel)]=\"selectednotitieCategorie\" (change)=\"Notitiecategory($event)\">\n                <option value=\"-1\" >--- Kies een categorie ---</option>\n                <option  *ngFor=\"let category of categoriesOfUser\" value={{category.id}}>{{ category.description }}</option>\n              </select>\n            </td>\n          </tr>\n          <tr>\n            <td></td>\n            <td></td>\n            <td>\n              <div>  \n                <ng-container *ngIf=\"toevoegenNotitie;then buttonToevoegen;else buttonWijzigen\">\n                </ng-container>\n                <ng-template #buttonToevoegen>\n                  <button (click)=\"NotitieToevoegen()\">Notitie toevoegen</button>\n                </ng-template>\n                <ng-template #buttonWijzigen>\n                  <button (click)=\"NotitieWijzigen()\">Notitie wijzigen</button>\n                </ng-template>\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td colspan=\"3\">\n              <div *ngFor=\"let note of notes\">\n                <input type=\"text\" name={{note.id}} [disabled]= true  (ng-click)=\"onItemClick(note.id, note.categoryId, note.content)\" value=\"{{note.content}}\"/>\n                <button (click)=\"NotitieBewerken(note)\">Notitie bewerken</button>\n                <button (click)=\"NotitieVerwijderen(note.id)\">Notitie verwijderen</button>\n              </div>\n            </td>\n          </tr>\n        </table>   \n      </td>\n      <td>\n        <table>          \n          <ul height=\"10\" id=\"notesList\">\n            <li *ngFor=\"let note of notes;let i = index\" (click)=\"onItemClick(note.id, note.categoryId, note.content)\">             \n              {{note.content}}\n            </li>\n          </ul>\n        </table>\n      </td>\n      <td>\n        <table>    \n          <tr> \n            <td>\n            <option *ngFor=\"let note of notes;let i = index\" (click)=\"onItemClick(note.id, note.categoryId, note.content)\">             \n              {{note.content}}\n            </option>\n        </td>\n        </tr>\n        <tr>\n          <td>\n            <button>om een knop te hebben</button>\n          </td>\n        </tr>\n      </table>\n    </td> -->\n    <td>\n      <table>       \n      </table>\n    </td>\n    </tr>\n  </table>\n\n</div>\n<br>\n<br>\n\n\n\n<!-- <table>\n  <tr>\n    <td colspan=\"2\">Filteren op categorie</td>\n  </tr>\n  <tr>\n    <td>\n      <select (change)=\"filterCategory($event)\">\n        <option value=-1 >--- Kies een categorie ---</option>\n        <option  *ngFor=\"let category of categories\" value={{category.description}}>{{ category.description }}</option>\n      </select>\n    </td>\n    <td><button (click)=\"filterCategoryToepassen()\">Filter toepassen</button></td>\n  </tr>\n</table> -->\n\n<!--\n<button (click)=\"NotitieToevoegen()\">Notitie toevoegen</button>\n<button (click)=\"NotitieBewerken(7)\">Notitie bewerken</button>\n\n\n\n  <div *ngFor=\"let note of notes\">\n    <input type=\"text\" name={{note.id}} [disabled]= true value=\"{{note.id}} {{note.content}}  {{note.noteCategoryId}}\"/>\n    <button (click)=\"NotitieBewerken(note.id)\">Notitie bewerken</button>\n    <button (click)=\"NotitieVerwijderen(note.id)\">Notitie verwijderen</button>\n  </div>\n\n  <div *ngFor=\"let note of notesNaFilter\">\n    {{ note.content }}\n  </div>\n\n-->\n\n  <!-- <form [formGroup]=\"formCategory\" (ngSubmit)=\"submitCategory()\">\n    <div *ngFor=\"let category of categories\">\n      <input type=\"checkbox\" (change)=\"onChangeCategory(category.description, $event.target.checked)\" />\n      {{ category.description }}\n    </div>\n    <button>Filter toepassen</button>\n  </form> -->\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { APIService } from '../api.service';\n\ninterface User {\n  id: number;\n  name: string;\n}\ninterface Note {\n  id: number;\n  content: string;\n  userId: number;\n  categoryId: number;\n}\n\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  styleUrls: ['./notes.component.css']\n})\nexport class NotesComponent implements OnInit {\n\n  @Input() loginUser: User;\n\n  activeUser: User;\n \n  private apiService: APIService;\n  notes: Note[] = [];\n  constructor(ApiService: APIService) {\n    this.apiService = ApiService;\n  } \n\n  ngOnInit() {    \n    this.activeUser= this.loginUser;\n    this.notitieshalen();\n  }\n  notitieshalen(){\n\n  this.apiService.getNotesOfUser(this.loginUser.id).subscribe((data: Note[]) => {\n    console.log(data);\n    this.notes=data;\n  })\n}\n\n}\n","{{loginUser.name}}\n<br>\n{{activeUser.name}}\n<div *ngFor=\"let note of notes\">\n  <input type=\"text\" name={{note.id}} [disabled]= true value=\"{{note.content}}\"/>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}