{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/notes/notes.component.ts","./src/app/notes/notes.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable, Component } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class APIService {\n\n  route;\n  \n  constructor(private http: HttpClient) { \n    this.route = 'https://jensjorisdecorte-backend-example-4.glitch.me'\n  }\n\n  //\n  //bewerkingen op \"/users\"\n  //\n  \n  //haal de lijst van alle gebruikers op\n  getUsers = () => {\n    return this.http.get(this.route + \"/users\");\n  }\n  //haal een gebruiker op\n  getUser = (userName: string) => {\n    return this.http.get(this.route + \"/users/\"+userName);\n  }\n  //voeg een gebruiker toe\n  addUser = (userName: string) => {\n    return this.http.post(this.route + \"/users\", {userName: userName});\n  }\n  //verwijder een gebruiker\n  delUser = (userId: number) => {\n    return this.http.delete(this.route + \"/users?userId=\" + userId);\n  }\n\n  //\n  //bewerkingen op \"/Categories\"\n  //\n\n  //haal de lijst van alle categorien op\n  getCategories = () => {\n    return this.http.get(this.route + \"/categories\");\n  }\n  //haal de lijst van alle categorien van een gebruiker op\n  getCategoriesOfUser = (userId: number) => {\n    return this.http.get(this.route + \"/users/\"+userId+\"/categories\");\n  }\n  //voeg een categorie toe voor een bepaalde gebruiker\n  addCategoriesForUser = ( userId: number, description: string) => {\n    return this.http.post(this.route + \"/users/\"+userId+\"/categories\", {description: description});\n  }\n  //verwijder een gebruiker\n  delCategoriesOfUser = (categoryId: number) => {\n    return this.http.delete(this.route + \"/categories?categoryId=\" + categoryId);\n  }\n\n  //\n  //bewerkingen op \"/notes\"\n  //\n  \n  //haal de lijst van alle notities op\n  getNotes = () => {\n    return this.http.get(this.route + \"/notes\");\n  }\n  //haal de lijst van alle notities van een gebruiker op\n  getNotesOfUser = (userId: number) => {\n    return this.http.get(this.route + \"/users/\"+userId+\"/notes\");\n  }\n  //haal de lijst van alle notities van een gebruiker op\n  getNotesOfUserWithCategoryFilter = (userId: number, categoryId: string) => {\n    return this.http.get(this.route + \"/users/\"+userId+\"/categories/\"+categoryId+\"/notes\");\n  }\n  //voeg een notitie toe voor een bepaalde gebruiker\n  addNoteForUser = ( userId: number, categoryId: string, content: string) => {\n    return this.http.post(this.route + \"/users/\"+userId+\"/categories/\"+categoryId+\"/notes\", {content: content});\n  }\n  //voeg een notitie toe voor een bepaalde gebruiker\n  updateNoteOfUser = ( noteId: string, categoryId: string, content: string) => {\n    return this.http.patch(this.route + \"/notes/\"+noteId, {categoryId: categoryId, content: content});\n  }\n  //voeg een notitie toe voor een bepaalde gebruiker\n  delNoteOfUser = ( noteId: number) => {\n    return this.http.delete(this.route + \"/notes?noteId=\" + noteId);\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\n  { path: 'home', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder } from '@angular/forms';\nimport { APIService } from './api.service';\nimport { HomeComponent } from './home/home.component';\n\ninterface User\n{\n  id: Number;\n  name: String;\n}\ninterface Gebruiker\n{\n  id: Number;\n  name: String;\n}\ninterface Notitie\n{\n  id: Number;\n  content: String;\n  userId: Number;\n  noteCategoryId: Number;\n}\ninterface Category\n{\n  id: Number;\n  description: String;\n  userId: Number;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent \n{\n  title = 'NotesApp';\n  private apiServiceApp;\n  route;\n  actieveGebruiker = \"Gina\";\n\n  nieuweGebruiker: string; //naam van een nieuw toe te voegen gebruiker\n  gebruiker: string;\n\n  messageGebruikerToevoegen;\n  messageGebruikerBestaat;\n  messageGebruikerVerwijderen;\n\n  gebruikers: Gebruiker[] = [];\n  notities: Notitie[] = [];\n  notitiesGebruiker: Notitie[] = [];\n  notitiesGebruikerMetQueryOpNotes: Notitie[] = [];\n  categorien: Category[] =  [];\n\n  naamToevoegen;\n  naamOpzoeken;\n  naamVerwijderen;\n  zoekString = \"Marc\";\n\n  naamNotitieToevoegen;\n  naamNotitieTonen;\n  inhoudNotitieToevoegen;  \n  categorieNotitieToevoegen;\n  \n  gevondenNotities: Notitie[] = [];\n  gevondenNotitiesFilter: Notitie[] = [];\n  categorienVanGebruiker: Category[] = [];\n  omschrijvingCategorieToevoegen;\n  naamCategorieToevoegen;\n  filterCategorie=\"prive\";\n\n  constructor(apiService: APIService)\n  {\n    this.apiServiceApp = apiService;\n    //this.vulDatabaseMetMockDataUsers();\n    //this.vulDatabaseMetMockDataCategories();\n    //this.vulDatabaseMetMockDataNotes();\n  }  \n  \n  ngOnInit(): void {\n   }\n\n  // //\n  // //bewerkingen op \"/users\"\n  // //\n  \n  // //haal de lijst van alle gebruikers op\n  // lijstGebruikers = () => {\n  //   this.apiServiceApp.getUsers().subscribe((data: Gebruiker[]) => {\n  //     console.log(data);   \n  //     this.gebruikers = data;\n  //     })\n  // }\n  // //voeg een gebruiker toe\n  // toevoegenGebruiker = () => {\n  //   this.apiServiceApp.addUser(this.nieuweGebruiker).subscribe((data) => {\n  //     console.log(data);\n  //     if(data.error == null)\n  //       this.messageGebruikerToevoegen = data.success;\n  //     else\n  //       this.messageGebruikerToevoegen = data.error;\n  //   });\n  //   this.nieuweGebruiker = \"\";\n  // }\n  // //checkt of een gebruiker reeds bestaat\n  // bestaatGebruiker = () =>{\n  //   this.apiServiceApp.getUser(this.gebruiker).subscribe((data) => {\n  //     console.log(data);\n  //     if(data.error == null)\n  //       this.messageGebruikerBestaat = data.success;\n  //     else\n  //       this.messageGebruikerBestaat = data.error;\n  //   });    \n  //   this.gebruiker = \"\";\n  // }\n  // //verwijder een gebruiker\n  // verwijderenGebruiker = () => {\n  //   this.apiServiceApp.deleteUser(this.naamVerwijderen).subscribe((data) => {\n  //       console.log(data);\n  //       if(data.error == null)\n  //         this.messageGebruikerVerwijderen = data.success;\n  //       else\n  //         this.messageGebruikerVerwijderen = data.error;\n  //   });\n  //   this.lijstGebruikers();\n  //   this.naamVerwijderen = \"\";\n  // }\n\n  // //\n  // //bewerkingen op \"/notescategory\"\n  // //\n\n  // //haal de lijst van alle categorien op\n  // lijstCategorie = () =>{\n  //   this.apiServiceApp.getCategories().subscribe((data: Category[]) => {\n  //     console.log(data);\n  //     this.categorien = data;\n  //   })\n  // }\n  // //haal de lijst van alle categorien op\n  // lijstCategorienVanGebruiker = () =>{\n  //   this.apiServiceApp.getCategoriesFromUser(this.actieveGebruiker).subscribe((data: Category[]) => {\n  //     console.log(data);\n  //     this.categorienVanGebruiker = data;\n  //   })\n  // }\n  // //voeg een categorie toe\n  // toevoegenCategorie = () =>{\n  //   this.apiServiceApp.addCategory(this.naamCategorieToevoegen, this.omschrijvingCategorieToevoegen).subscribe((data) => {\n  //     console.log(data);\n  //     if(data.error == null)\n  //       this.messageGebruikerBestaat = data.success;\n  //     else\n  //       this.messageGebruikerBestaat = data.error;\n  //   });    \n  // }\n\n  // //\n  // //bewerkingen op \"/Notes\"\n  // //\n\n  // //haal de lijst van alle notities op\n  // lijstNotities = () => {\n  //   this.apiServiceApp.getNotes().subscribe((data: Notitie[]) => {\n  //        console.log(data);\n  //       this.notities = data;\n  //     })\n  // }\n  // //haal de lijst van alle notities op voor een bepaalde gebruiker\n  // lijstNotitiesVanGebruiker = () => {\n  //   this.notitiesVanGebruikerFilterenOpCategorie();\n  //   //this.apiServiceApp.getNotesFromUser(this.actieveGebruiker).subscribe((data: Notitie[]) => {\n  //    // console.log(data);\n  //    //this.notitiesGebruiker = data;\n  //   //});\n  //   this.naamNotitieTonen = \"\";\n  // }\n  // //voeg een notitie toe een bepaalde gebruiker\n  // toevoegenNotitieVoorGebruiker = () => {\n  //   this.apiServiceApp.addNoteForUser(this.naamNotitieToevoegen, this.inhoudNotitieToevoegen,this.categorieNotitieToevoegen).subscribe((data) => {\n  //     console.log(data);\n  //   });\n  //   this.naamNotitieToevoegen = \"\";\n  //   this.inhoudNotitieToevoegen = \"\";\n  //   this.categorieNotitieToevoegen = \"\";\n  // }\n  // notitiesVanGebruikerDieZoekStringBevatten() {\n  //   this.notitiesVanGebruikerFilterenOpCategorie();\n  //   // this.apiServiceApp.getNotesWithSubstringFromUser(this.actieveGebruiker, this.zoekString).subscribe((data: Notitie[]) => {\n  //   //   console.log(data);\n  //   //  this.gevondenNotities = data;\n  //   // });\n  //   this.zoekString = \"\";\n  // }\n  // notitiesVanGebruikerFilterenOpCategorie() {\n  //   this.apiServiceApp.getNotesWithSubstringFromUser(this.actieveGebruiker, this.zoekString, this.filterCategorie).subscribe((data: Notitie[]) => {\n  //     console.log(data);\n  //    this.gevondenNotitiesFilter = data;\n  //   });\n  // }\n  \n  userid;\n  //nep data om de functies te controleren\n    vulDatabaseMetMockDataUsers() {\n\n      this.apiServiceApp.addUser(\"Gina\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Gina\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"prive\").subscribe((data) => {\n          console.log(data);})\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Chantal\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Chantal\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"prive\").subscribe((data) => {\n          console.log(data);})\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})        \n        })\n      })\n      this.apiServiceApp.addUser(\"Sonja\").subscribe((data) => {\n        console.log(data);\n      this.apiServiceApp.getUser(\"Sonja\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Thierry\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Karel\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Karel\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"prive\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Tim\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Marie\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Marie\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Jonathan\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Ilse\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Ilse\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Isabel\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Peter\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"David\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Geert\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Tom\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Tom\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"prive\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n    }\n    vulDatabaseMetMockDataCategories() {\n    }\n    vulDatabaseMetMockDataNotes() {\n      this.apiServiceApp.addNoteForUser(\"Gina\", \"bureau kuisen\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Gina\", \"facebook checken\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Gina\", \"boodschappen doen\",\"prive\").subscribe((data) => {\n        console.log(data);})          \n      this.apiServiceApp.addNoteForUser(\"Chantal\", \"bureau kuisen\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Chantal\", \"facebook checken\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Chantal\", \"dochter bellen\",\"prive\").subscribe((data) => {\n        console.log(data);})        \n      this.apiServiceApp.addNoteForUser(\"Sonja\", \"facturen bezorgen\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Karel\", \"personeel beoordelen\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Karel\", \"avondje uit\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Marie\", \"les gaan volgen\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Tom\", \"vrouw bellen\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Ilse\", \"infobrochure verspreiden\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n    }\n}","  \n<router-outlet></router-outlet>","\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { NotesComponent } from './notes/notes.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NotesComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, FormControl } from '@angular/forms';\n\nimport { APIService } from '../api.service';\n\ninterface User {\n  id: number;\n  name: string;\n}\ninterface Note {\n  id: number;\n  content: string;\n  userId: number;\n  categoryId: number;\n}\ninterface Category {\n  id: number;\n  description: string;\n  userId: number;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n\n  private apiService: APIService;\n    \n    //ingelogde gebruiker\n\n    loginUser: User;\n    loginUserId;\n    toevoegenNotitie= true;\n    selectednotitieCategorie=\"-1\";\n    //lijst van gebruikers\n    users: User[] = [];\n    //lijst van categoriën\n    categories: Category[] = [];\n    //lijst van notities\n    notesOfUserWithCategoryFilter: Note[] = [];\n\n  constructor(ApiService: APIService) {\n    this.apiService = ApiService;\n  } \n  message0: string = \"Welkom bij notesApp\";\n  message1: string = \"Geef uw gebruikersnaam in om in te loggen.\";\n  message2: string = \"Nieuwe gebruiker?  Maak een account aan.\";\n  loginUserName: string = \"Gina\";\n\n  ngOnInit() {\n  }\n  \n  //userExists is false wanneer loginUserName niet gekend is\n  userExists: boolean = false;\n  //gebruiker met naam loginUserName, diens categoriën en notities\n  activeUser: User;\n  categoriesOfUser: Category[] = [];\n  notesOfUser: Note[] = [];\n  //lijst van weer te geven notities\n  notes: Note[] = [];\n\n  //controleer of de ingegeven naam bestaat en ga de gegevens van die gebruiker ophalen  \n  getUser() {\n    this.apiService.getUser(this.loginUserName).subscribe((data: User) => {\n      console.log(data);\n      this.loginUser= data;\n      if(this.loginUser.name === undefined) {\n        this.userExists= false;\n        this.message1= \"Gebruiker \" + this.loginUserName + \" is niet gekend!  Probeer opnieuw of maak een account aan.\";\n        return;\n      }\n        else {\n          this.userExists= true;\n          this.message0= \"Welkom \" + this.loginUser.name;\n        }\n      this.apiService.getCategoriesOfUser(this.loginUser.id).subscribe((data: Category[]) => {\n        console.log(data);\n        this.categoriesOfUser = data;\n      })\n      this.apiService.getNotesOfUser(this.loginUser.id).subscribe((data: Note[]) => {\n        console.log(data);\n        //notesOfUser is de lijst met alle notities van de gebruiker\n        this.notesOfUser = data;\n        //notes is de lijst met weer te geven notities\n        this.notes=data;\n      })\n    })\n  }\n  \n  //velden voor de nieuwe account weergeven\n  addAccountClicked: boolean = false;\n  newUserName: string = \"\";\n  addAccount(){\n    this.addAccountClicked = true;\n    this.newUserName = this.loginUserName;\n  }\n  //gebruiker toevoegen\n  addUser() {\n    this.loginUserName=\"\";\n    this.apiService.addUser(this.newUserName).subscribe((data) => {\n      console.log(data);\n      //zonder fout is de gebruiker geregistreerd\n      // if(data.error == null) {\n      //   this.message1 = \"U bent geregistreerd, geef uw gebruikersnaam in om in te loggen.\";\n      //   this.addAccountClicked = false;\n      //   this.message2 = \"Nieuwe gebruiker?  Maak een account aan.\"\n      // }\n      // else {\n      //   this.message2 = \"Deze loginnaam bestaat al, gelieve een andere te kiezen.\"\n      // }\n    })\n  }\n\n  //eenmaal ingelogd\n  //lijst notities tonen, maar die hebben we al\n\n  onItemClick(noteId)\n  {\n    console.log(noteId);\n  }\n\n\n//uit te kuisen code\n  inloggen(){\n    //gebruiker ophalen\n    this.apiService.getUser(this.loginUserName).subscribe((data: User) => {\n      console.log(data);\n      this.loginUser= data;\n      if(this.loginUser.name === undefined) {\n        this.userExists= false;\n        this.message1= \"Gebruiker \" + this.loginUserName + \" is niet gekend!\";\n        return;\n      }\n        else {\n          this.userExists= true;\n          this.message2= \"Welkom \" + this.loginUser.name;\n        }\n    this.apiService.getCategoriesOfUser(this.loginUser.id).subscribe((data: Category[]) => {\n      console.log(data);\n      this.categoriesOfUser = data;\n    })\n    this.apiService.getNotesOfUser(this.loginUser.id).subscribe((data: Note[]) => {\n      console.log(data);\n      this.notesOfUser = data;\n      this.notes=data;\n    })\n})\n}\nnieuweGebruiker() {\n  alert(\"aanmelden\");\n}\n  \n  categoryFilter=\"-1\";\n  filterAan=false;\n  notesMetCategorieFilter: Note[]=[];\n  filterCategory(event){\n    this.categoryFilter= event.target.value;\n  }\n  selectedFilterCategorie: string = \"-1\";\nshowAllNotes(){\n  this.notes= this.notesOfUser;\n  this.filterAan=false;\n  this.selectedFilterCategorie = \"-1\";\n}\n  filterCategoryToepassen(){\n      if(this.filterAan) {\n        this.notes= this.notesOfUser;\n      }\n      if(this.categoryFilter == \"-1\") {\n        this.filterAan=false;\n        return;\n      }\n      this.notes.forEach(note => {\n        if(note.categoryId == Number(this.categoryFilter)) {\n          this.notesMetCategorieFilter.push(note);\n        }\n      });\n      this.notes=this.notesMetCategorieFilter;\n      this.filterAan=true;\n      this.notesMetCategorieFilter=[];\n  }\n  content=\"\";\n  categorieNotitie=\"-1\";\n  Notitiecategory(event){\n    this.categorieNotitie= event.target.value;\n  }\n  NotitieToevoegen(){\n    if(this.categorieNotitie == \"-1\") {\n      alert(\"U koos geen categorie\");\n      return;\n    }\n    this.apiService.addNoteForUser(this.loginUser.id, this.categorieNotitie, this.content + \"(catId: \" + this.categorieNotitie + \")\").subscribe((data) => {\n      console.log(data);\n      this.apiService.getNotesOfUser(this.loginUser.id).subscribe((notes: Note[]) => {\n        console.log(notes);\n        this.notesOfUser = notes;\n      })\n    })\n    }\n\n    substring=\"\";\n    notesMetSubstring: Note[]=[];\n    NotitiesMetZoekstringZoeken() {\n      this.notes.forEach(note => {\n        if(note.content.includes(this.substring)) {\n          this.notesMetSubstring.push(note);\n        }\n      });\n      this.notes=this.notesMetSubstring;\n      this.substring=\"\";\n      this.notesMetSubstring=[];\n    }\n    noteToUpdateId;\n    NotitieBewerken(note) {\n      //naam en functie button wijzigen\n      this.toevoegenNotitie=false;\n      //velden content en categorie invullen op basis van de bestaande notitie\n      this.content=note.content;\n      this.selectednotitieCategorie= note.categoryId;\n      //id van de notitie, want die hebben we nodig om in de DB aanpassingen te kunnen doen\n      this.noteToUpdateId = note.id;\n    }\n    NotitieWijzigen() {\n      this.apiService.updateNoteOfUser(this.noteToUpdateId,this.selectednotitieCategorie,this.content).subscribe((data) => {\n      console.log(data);\n      this.apiService.getNotesOfUser(this.loginUser.id).subscribe((notes: Note[]) => {\n        console.log(notes);\n        this.notesOfUser = notes;\n      })\n    })\n    }\n    NotitieVerwijderen(noteId) {\n      this.apiService.getNotesOfUser(this.loginUser.id).subscribe((data: Note[]) => {\n        console.log(data);\n        this.apiService.delNoteOfUser(noteId).subscribe((data) => {\n          console.log(data);\n        })\n        this.notesOfUser = data;\n      })\n    }\n\n//moeten van invoervelden komen:\naddUser_userName = \"Tina\";\naddCategoriesForUser_description= \"test1\";\ndeleteCategorie_idOfUser: number = 10;\naddCategorie_idOfUser:number = 1;\ncontentNieuweNotitie:string = \"nieuwe notitie van Gina met cat 6\"\n  //apiservice\n    //gebruikers ophalen\n  getUsers() {\n    this.apiService.getUsers().subscribe((data: User[]) => {\n      console.log(data);\n      this.users = data;\n    })\n  }\n  //gebruiker verwijderen\n  delUser() {\n    this.apiService.delUser(this.loginUserId).subscribe((data) => {\n      console.log(data);\n    })\n  }\n\n  //categoriën\n  //catergoriën ophalen\n  getCategories() {\n    this.apiService.getCategories().subscribe((data: Category[]) => {\n      console.log(data);\n      this.categories = data;\n    })\n  }\n  //categoriën van de actieve gebruiker ophalen\n  getCategoriesOfUser(userId) {\n    this.apiService.getCategoriesOfUser(userId).subscribe((data: Category[]) => {\n      console.log(data);\n      this.categoriesOfUser = data;\n    })\n  }\n  //categorie voor de actieve gebruiker toevoegen\n  addCategoriesForUser() {\n    this.apiService.addCategoriesForUser(this.loginUserId, this.addCategoriesForUser_description).subscribe((data) => {\n      console.log(data);\n    })\n  }\n  //categoriën van de actieve gebruiker verwijderen en dus ook de bijhorende notities\n  deleteCategoriesOfUser(){\n    this.apiService.delCategoriesOfUser(this.deleteCategorie_idOfUser).subscribe((data) => {\n      console.log(data);\n    })\n  }\n  //notities\n  getNotes() {\n    this.apiService.getNotes().subscribe((data: Note[]) => {\n      console.log(data);\n      this.notes = data;\n    })\n  }\n  getNotesOfUser(userId) {\n    this.apiService.getNotesOfUser(userId).subscribe((data: Note[]) => {\n      console.log(data);\n      this.notesOfUser = data;\n    })\n  }\n  addNoteForUser(userId, categoryId, content) {\n    this.apiService.addNoteForUser(userId, categoryId,content).subscribe((data) => {\n      console.log(data);\n    })\n  }\n    //opgekuisd\n\n\n  // onChangeCategory(description: string, isChecked: boolean) {\n  //   const categories = (this.formCategory.controls.description as FormArray);\n\n  //   if (isChecked) {\n  //     categories.push(new FormControl(description));\n  //   } \n  //   else {\n  //     const index = categories.controls.findIndex(x => x.value === description);\n  //     categories.removeAt(index);\n  //   }\n  // }\n  \n  // onChangeNote(content: string, isChecked: boolean) {\n  //   const notes = (this.formNote.controls.content as FormArray);\n\n  //   if (isChecked) {\n  //     notes.push(new FormControl(content));\n  //   } \n  //   else {\n  //     const index = notes.controls.findIndex(x => x.value === content);\n  //     notes.removeAt(index);\n  //   }\n  // }\n\n\n  // submitCategory() {\n  //   this.notesNaFilter=[];\n  //   this.filters = this.formCategory.value.description;\n  //   this.filters.forEach((filter) => {\n  //     this.OphalenNotitie(filter);\n  //     console.log(this.formCategory.value.description);\n  //   });\n  // }\n  // submitNote() {\n  //   console.log(this.formNote.value.content);\n  // }\n}\n","<h2>{{message0}}</h2>\n\n\n<div>  \n  <ng-container *ngIf=\"!userExists; then loginContent; else activeUserContent\">\n  </ng-container>\n  \n  <!-- loginscherm -->\n  <!-- gebruiker is nog niet gekend -->\n  <ng-template #loginContent>\n    <h4>{{message1}}</h4>\n    <label>Gebruikersnaam</label>\n    <br>\n    <input type=\"text\" [(ngModel)]=\"loginUserName\"/>\n    <button (click)=\"getUser()\">Inloggen</button>\n    <h4>{{message2}}</h4>\n    <div>\n      <ng-container *ngIf=\"!addAccountClicked; then user; else newUser\">\n      </ng-container>\n\n      <ng-template #user>\n        <button (click)=\"addAccount()\">Nieuwe account</button>\n      </ng-template>\n      <ng-template #newUser>\n        <label>Gebruikersnaam</label>\n        <br>\n        <input type=\"text\" [(ngModel)]=\"newUserName\"/>\n        <button (click)=\"addUser()\">Maak account</button>\n      </ng-template>\n    </div>\n  </ng-template>\n  \n  <!-- userscherm -->\n  <!-- gebruikergegevens zijn gekend -->\n  <ng-template #activeUserContent>\n    {{message0}}\n    <table>\n\n    </table>\n   <!-- <app-notes [loginUser] = \"loginUser\"></app-notes> -->\n  </ng-template>\n  \n  <!-- userscherm -->\n  <table>\n    <tr>\n      <td>\n        <table>\n          <tr>\n            <td><button (click)=\"showAllNotes()\">Alle notities weergeven</button></td>\n          </tr>\n          <tr>\n            <td><hr>filteren op categorie:</td>\n          </tr>\n          <tr>\n            <td>\n              <select  [(ngModel)]=\"selectedFilterCategorie\" (change)=\"filterCategory($event)\">\n                <option value=-1 >--- Kies een categorie ---</option>\n                <option  *ngFor=\"let category of categoriesOfUser\" value={{category.id}}>{{ category.description }}</option>\n              </select>\n            </td>\n          </tr>\n          <tr>\n            <td><button (click)=\"filterCategoryToepassen()\">Filter toepassen</button></td>\n          </tr>  \n          \n          <tr>\n            <td><hr>Zoeken op content:</td>\n          </tr>\n          <tr>\n            <td>\n              <input [(ngModel)]=\"substring\"/>\n            </td>\n          </tr>\n          <tr>\n            <td><button (click)=\"NotitiesMetZoekstringZoeken()\">Notities zoeken</button></td>\n          </tr>      \n        </table>\n      </td>\n      <td>\n        <table>\n          <tr>\n            <td>Notitie toevoegen</td>\n            <td>\n              <input [(ngModel)]=\"content\"/>\n            </td>\n            <td>\n              <select [(ngModel)]=\"selectednotitieCategorie\" (change)=\"Notitiecategory($event)\">\n                <option value=\"-1\" >--- Kies een categorie ---</option>\n                <option  *ngFor=\"let category of categoriesOfUser\" value={{category.id}}>{{ category.description }}</option>\n              </select>\n            </td>\n          </tr>\n          <tr>\n            <td></td>\n            <td></td>\n            <td>\n              <div>  \n                <ng-container *ngIf=\"toevoegenNotitie;then buttonToevoegen;else buttonWijzigen\">\n                </ng-container>\n                <ng-template #buttonToevoegen>\n                  <button (click)=\"NotitieToevoegen()\">Notitie toevoegen</button>\n                </ng-template>\n                <ng-template #buttonWijzigen>\n                  <button (click)=\"NotitieWijzigen()\">Notitie wijzigen</button>\n                </ng-template>\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td colspan=\"3\">\n              <div *ngFor=\"let note of notes\">\n                <input type=\"text\" name={{note.id}} [disabled]= true value=\"{{note.content}}\"/>\n                <button (click)=\"NotitieBewerken(note)\">Notitie bewerken</button>\n                <button (click)=\"NotitieVerwijderen(note.id)\">Notitie verwijderen</button>\n              </div>\n            </td>\n          </tr>\n        </table>   \n      </td>\n      <td>\n        <table>\n          <ul id=\"notesList\">\n            <li *ngFor=\"let note of notes;let i = index\" (click)=\"onItemClick(note.id)\">             \n              {{note.content}}\n            </li>\n          </ul>\n          <!-- <ul class=\"sub-menu collapse\" id=\"statistics\">\n            <li *ngFor=\"let item of listItems;let i = index\" (click)=\"onItemClick('statistics',i)\">{{ item }}</li>\n          </ul> -->\n        </table>\n      </td>\n\n    </tr>\n  </table>\n\n</div>\n<br>\n<br>\n\n\n\n<!-- <table>\n  <tr>\n    <td colspan=\"2\">Filteren op categorie</td>\n  </tr>\n  <tr>\n    <td>\n      <select (change)=\"filterCategory($event)\">\n        <option value=-1 >--- Kies een categorie ---</option>\n        <option  *ngFor=\"let category of categories\" value={{category.description}}>{{ category.description }}</option>\n      </select>\n    </td>\n    <td><button (click)=\"filterCategoryToepassen()\">Filter toepassen</button></td>\n  </tr>\n</table> -->\n\n<!--\n<button (click)=\"NotitieToevoegen()\">Notitie toevoegen</button>\n<button (click)=\"NotitieBewerken(7)\">Notitie bewerken</button>\n\n\n\n  <div *ngFor=\"let note of notes\">\n    <input type=\"text\" name={{note.id}} [disabled]= true value=\"{{note.id}} {{note.content}}  {{note.noteCategoryId}}\"/>\n    <button (click)=\"NotitieBewerken(note.id)\">Notitie bewerken</button>\n    <button (click)=\"NotitieVerwijderen(note.id)\">Notitie verwijderen</button>\n  </div>\n\n  <div *ngFor=\"let note of notesNaFilter\">\n    {{ note.content }}\n  </div>\n\n-->\n\n  <!-- <form [formGroup]=\"formCategory\" (ngSubmit)=\"submitCategory()\">\n    <div *ngFor=\"let category of categories\">\n      <input type=\"checkbox\" (change)=\"onChangeCategory(category.description, $event.target.checked)\" />\n      {{ category.description }}\n    </div>\n    <button>Filter toepassen</button>\n  </form> -->\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { APIService } from '../api.service';\n\ninterface User {\n  id: number;\n  name: string;\n}\ninterface Note {\n  id: number;\n  content: string;\n  userId: number;\n  categoryId: number;\n}\n\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  styleUrls: ['./notes.component.css']\n})\nexport class NotesComponent implements OnInit {\n\n  @Input() loginUser: User;\n\n  activeUser: User;\n \n  private apiService: APIService;\n  notes: Note[] = [];\n  constructor(ApiService: APIService) {\n    this.apiService = ApiService;\n  } \n\n  ngOnInit() {    \n    this.activeUser= this.loginUser;\n    this.notitieshalen();\n  }\n  notitieshalen(){\n\n  this.apiService.getNotesOfUser(this.loginUser.id).subscribe((data: Note[]) => {\n    console.log(data);\n    this.notes=data;\n  })\n}\n\n}\n","{{loginUser.name}}\n<br>\n{{activeUser.name}}\n<div *ngFor=\"let note of notes\">\n  <input type=\"text\" name={{note.id}} [disabled]= true value=\"{{note.content}}\"/>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}