{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/notes/notes.component.ts","./src/app/notes/notes.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable, Component } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class APIService {\n\n  route;\n  \n  constructor(private http: HttpClient) { \n    this.route = 'https://jensjorisdecorte-backend-example-4.glitch.me'\n  }\n\n  //\n  //bewerkingen op \"/users\"\n  //\n  \n  //haal de lijst van alle gebruikers op\n  getUsers = () => {\n    return this.http.get(this.route + \"/users\");\n  }\n  //haal een gebruiker op\n  getUser = (userName: string) => {\n    return this.http.get(this.route + \"/users/\"+userName);\n  }\n  //voeg een gebruiker toe\n  addUser = (userName: string) => {\n    return this.http.post(this.route + \"/users\", {userName: userName});\n  }\n  //verwijder een gebruiker\n  delUser = (userId: number) => {\n    return this.http.delete(this.route + \"/users?userId=\" + userId);\n  }\n\n  //\n  //bewerkingen op \"/Categories\"\n  //\n\n  //haal de lijst van alle categorien op\n  getCategories = () => {\n    return this.http.get(this.route + \"/categories\");\n  }\n  //haal de lijst van alle categorien van een gebruiker op\n  getCategoriesOfUser = (userId: number) => {\n    return this.http.get(this.route + \"/users/\"+userId+\"/categories\");\n  }\n  //voeg een categorie toe voor een bepaalde gebruiker\n  addCategoryForUser = ( userId: number, description: string, color: string) => {\n    return this.http.post(this.route + \"/users/\"+userId+\"/categories\", {description: description, color: color});\n  }\n  //verwijder een gebruiker\n  delCategoriesOfUser = (categoryId: number) => {\n    return this.http.delete(this.route + \"/categories?categoryId=\" + categoryId);\n  }\n\n  //\n  //bewerkingen op \"/notes\"\n  //\n  \n  //haal de lijst van alle notities op\n  getNotes = () => {\n    return this.http.get(this.route + \"/notes\");\n  }\n  //haal de lijst van alle notities van een gebruiker op\n  getNotesOfUser = (userId: number) => {\n    return this.http.get(this.route + \"/users/\"+userId+\"/notes\");\n  }\n  //haal de lijst van alle notities van een gebruiker op\n  getNotesOfUserWithCategoryFilter = (userId: number, categoryId: number) => {\n    return this.http.get(this.route + \"/users/\"+userId+\"/categories/\"+categoryId+\"/notes\");\n  }\n  //voeg een notitie toe voor een bepaalde gebruiker\n  addNoteForUser = ( userId: number, categoryId: number, content: string) => {\n    return this.http.post(this.route + \"/users/\"+userId+\"/categories/\"+categoryId+\"/notes\", {content: content});\n  }\n  //voeg een notitie toe voor een bepaalde gebruiker\n  updateNoteOfUser = ( noteId: number, categoryId: number, content: string) => {\n    return this.http.patch(this.route + \"/notes/\"+noteId, {categoryId: categoryId, content: content});\n  }\n  //voeg een notitie toe voor een bepaalde gebruiker\n  delNoteOfUser = ( noteId: number) => {\n    return this.http.delete(this.route + \"/notes?noteId=\" + noteId);\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\n  { path: 'home', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder } from '@angular/forms';\nimport { APIService } from './api.service';\nimport { HomeComponent } from './home/home.component';\n\ninterface User\n{\n  id: Number;\n  name: String;\n}\ninterface Gebruiker\n{\n  id: Number;\n  name: String;\n}\ninterface Notitie\n{\n  id: Number;\n  content: String;\n  userId: Number;\n  noteCategoryId: Number;\n}\ninterface Category\n{\n  id: Number;\n  description: String;\n  userId: Number;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent \n{\n  title = 'NotesApp';\n  private apiServiceApp;\n  route;\n  actieveGebruiker = \"Gina\";\n\n  nieuweGebruiker: string; //naam van een nieuw toe te voegen gebruiker\n  gebruiker: string;\n\n  messageGebruikerToevoegen;\n  messageGebruikerBestaat;\n  messageGebruikerVerwijderen;\n\n  gebruikers: Gebruiker[] = [];\n  notities: Notitie[] = [];\n  notitiesGebruiker: Notitie[] = [];\n  notitiesGebruikerMetQueryOpNotes: Notitie[] = [];\n  categorien: Category[] =  [];\n\n  naamToevoegen;\n  naamOpzoeken;\n  naamVerwijderen;\n  zoekString = \"Marc\";\n\n  naamNotitieToevoegen;\n  naamNotitieTonen;\n  inhoudNotitieToevoegen;  \n  categorieNotitieToevoegen;\n  \n  gevondenNotities: Notitie[] = [];\n  gevondenNotitiesFilter: Notitie[] = [];\n  categorienVanGebruiker: Category[] = [];\n  omschrijvingCategorieToevoegen;\n  naamCategorieToevoegen;\n  filterCategorie=\"prive\";\n\n  constructor(apiService: APIService)\n  {\n    this.apiServiceApp = apiService;\n    //this.vulDatabaseMetMockDataUsers();\n    //this.vulDatabaseMetMockDataCategories();\n    //this.vulDatabaseMetMockDataNotes();\n  }  \n  \n  ngOnInit(): void {\n   }\n\n  // //\n  // //bewerkingen op \"/users\"\n  // //\n  \n  // //haal de lijst van alle gebruikers op\n  // lijstGebruikers = () => {\n  //   this.apiServiceApp.getUsers().subscribe((data: Gebruiker[]) => {\n  //     console.log(data);   \n  //     this.gebruikers = data;\n  //     })\n  // }\n  // //voeg een gebruiker toe\n  // toevoegenGebruiker = () => {\n  //   this.apiServiceApp.addUser(this.nieuweGebruiker).subscribe((data) => {\n  //     console.log(data);\n  //     if(data.error == null)\n  //       this.messageGebruikerToevoegen = data.success;\n  //     else\n  //       this.messageGebruikerToevoegen = data.error;\n  //   });\n  //   this.nieuweGebruiker = \"\";\n  // }\n  // //checkt of een gebruiker reeds bestaat\n  // bestaatGebruiker = () =>{\n  //   this.apiServiceApp.getUser(this.gebruiker).subscribe((data) => {\n  //     console.log(data);\n  //     if(data.error == null)\n  //       this.messageGebruikerBestaat = data.success;\n  //     else\n  //       this.messageGebruikerBestaat = data.error;\n  //   });    \n  //   this.gebruiker = \"\";\n  // }\n  // //verwijder een gebruiker\n  // verwijderenGebruiker = () => {\n  //   this.apiServiceApp.deleteUser(this.naamVerwijderen).subscribe((data) => {\n  //       console.log(data);\n  //       if(data.error == null)\n  //         this.messageGebruikerVerwijderen = data.success;\n  //       else\n  //         this.messageGebruikerVerwijderen = data.error;\n  //   });\n  //   this.lijstGebruikers();\n  //   this.naamVerwijderen = \"\";\n  // }\n\n  // //\n  // //bewerkingen op \"/notescategory\"\n  // //\n\n  // //haal de lijst van alle categorien op\n  // lijstCategorie = () =>{\n  //   this.apiServiceApp.getCategories().subscribe((data: Category[]) => {\n  //     console.log(data);\n  //     this.categorien = data;\n  //   })\n  // }\n  // //haal de lijst van alle categorien op\n  // lijstCategorienVanGebruiker = () =>{\n  //   this.apiServiceApp.getCategoriesFromUser(this.actieveGebruiker).subscribe((data: Category[]) => {\n  //     console.log(data);\n  //     this.categorienVanGebruiker = data;\n  //   })\n  // }\n  // //voeg een categorie toe\n  // toevoegenCategorie = () =>{\n  //   this.apiServiceApp.addCategory(this.naamCategorieToevoegen, this.omschrijvingCategorieToevoegen).subscribe((data) => {\n  //     console.log(data);\n  //     if(data.error == null)\n  //       this.messageGebruikerBestaat = data.success;\n  //     else\n  //       this.messageGebruikerBestaat = data.error;\n  //   });    \n  // }\n\n  // //\n  // //bewerkingen op \"/Notes\"\n  // //\n\n  // //haal de lijst van alle notities op\n  // lijstNotities = () => {\n  //   this.apiServiceApp.getNotes().subscribe((data: Notitie[]) => {\n  //        console.log(data);\n  //       this.notities = data;\n  //     })\n  // }\n  // //haal de lijst van alle notities op voor een bepaalde gebruiker\n  // lijstNotitiesVanGebruiker = () => {\n  //   this.notitiesVanGebruikerFilterenOpCategorie();\n  //   //this.apiServiceApp.getNotesFromUser(this.actieveGebruiker).subscribe((data: Notitie[]) => {\n  //    // console.log(data);\n  //    //this.notitiesGebruiker = data;\n  //   //});\n  //   this.naamNotitieTonen = \"\";\n  // }\n  // //voeg een notitie toe een bepaalde gebruiker\n  // toevoegenNotitieVoorGebruiker = () => {\n  //   this.apiServiceApp.addNoteForUser(this.naamNotitieToevoegen, this.inhoudNotitieToevoegen,this.categorieNotitieToevoegen).subscribe((data) => {\n  //     console.log(data);\n  //   });\n  //   this.naamNotitieToevoegen = \"\";\n  //   this.inhoudNotitieToevoegen = \"\";\n  //   this.categorieNotitieToevoegen = \"\";\n  // }\n  // notitiesVanGebruikerDieZoekStringBevatten() {\n  //   this.notitiesVanGebruikerFilterenOpCategorie();\n  //   // this.apiServiceApp.getNotesWithSubstringFromUser(this.actieveGebruiker, this.zoekString).subscribe((data: Notitie[]) => {\n  //   //   console.log(data);\n  //   //  this.gevondenNotities = data;\n  //   // });\n  //   this.zoekString = \"\";\n  // }\n  // notitiesVanGebruikerFilterenOpCategorie() {\n  //   this.apiServiceApp.getNotesWithSubstringFromUser(this.actieveGebruiker, this.zoekString, this.filterCategorie).subscribe((data: Notitie[]) => {\n  //     console.log(data);\n  //    this.gevondenNotitiesFilter = data;\n  //   });\n  // }\n  \n  userid;\n  //nep data om de functies te controleren\n    vulDatabaseMetMockDataUsers() {\n\n      this.apiServiceApp.addUser(\"Gina\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Gina\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"prive\").subscribe((data) => {\n          console.log(data);})\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Chantal\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Chantal\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"prive\").subscribe((data) => {\n          console.log(data);})\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})        \n        })\n      })\n      this.apiServiceApp.addUser(\"Sonja\").subscribe((data) => {\n        console.log(data);\n      this.apiServiceApp.getUser(\"Sonja\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Thierry\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Karel\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Karel\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"prive\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Tim\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Marie\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Marie\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Jonathan\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Ilse\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Ilse\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Isabel\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Peter\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"David\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Geert\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Tom\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Tom\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"prive\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n    }\n    vulDatabaseMetMockDataCategories() {\n    }\n    vulDatabaseMetMockDataNotes() {\n      this.apiServiceApp.addNoteForUser(\"Gina\", \"bureau kuisen\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Gina\", \"facebook checken\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Gina\", \"boodschappen doen\",\"prive\").subscribe((data) => {\n        console.log(data);})          \n      this.apiServiceApp.addNoteForUser(\"Chantal\", \"bureau kuisen\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Chantal\", \"facebook checken\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Chantal\", \"dochter bellen\",\"prive\").subscribe((data) => {\n        console.log(data);})        \n      this.apiServiceApp.addNoteForUser(\"Sonja\", \"facturen bezorgen\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Karel\", \"personeel beoordelen\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Karel\", \"avondje uit\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Marie\", \"les gaan volgen\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Tom\", \"vrouw bellen\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Ilse\", \"infobrochure verspreiden\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n    }\n}","  \n<router-outlet></router-outlet>","\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ColorPickerModule  } from 'ngx-color-picker';\n\nimport { AppComponent } from './app.component';\n\nimport { HomeComponent } from './home/home.component';\nimport { NotesComponent } from './notes/notes.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NotesComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ColorPickerModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, FormControl } from '@angular/forms';\n\nimport { APIService } from '../api.service';\nimport { ColorFormats } from 'ngx-color-picker/lib/formats';\n\ninterface User {\n  id: number;\n  name: string;\n}\ninterface Note {\n  id: number;\n  content: string;\n  userId: number;\n  categoryId: number;\n}\ninterface Category {\n  id: number;\n  description: string;\n  color: string;\n  userId: number;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n\n  private apiService: APIService;\n    \n  constructor(ApiService: APIService) {\n    this.apiService = ApiService;\n  } \n\n  ngOnInit() {\n  }\n\n  //info strartscherm\n  message0: string = \"Welkom bij notesApp\";\n  message1: string = \"Geef uw gebruikersnaam in om in te loggen.\";\n  message2: string = \"Nieuwe gebruiker?  Maak een account aan.\";\n  message3: string = \"Geef hier de naam van uw categorie in\";\n  message4: string = \"In welke kleur wilt u de categorie weergeven\";\n  message5: string = \"Vul hier uw notitie in\";\n  message6: string = \"Kies uw notitiecategorie\";\n  loginUserName: string = \"Emiel\";\n  //userExists is false wanneer loginUserName niet gekend is\n  userExists: boolean = false;\n  //gebruiker met naam loginUserName\n  activeUser: User;\n  //categoriën van gebruiker\n  categoriesOfUser: Category[] = [];\n  //categoryListEmpty: boolean = true;\n  //geselecteerde categorie staat standaard op -1: --- kies een categorie ---\n  selectedFilterCategoryFilter: number = -1;\n  //geselecteerde categorie staat standaard op -1: --- kies een categorie ---\n  selectedNotesCategory: number = -1;\n  //kleurlijst weergave categoriën\n  categoryColor;\n  //notities van gebruiker\n  notesOfUser: Note[] = [];\n  //lijst van weer te geven notities\n  notes: Note[] = [];\n\n  //controleer of de ingegeven naam bestaat en ga de gegevens van die gebruiker ophalen  \n  getUser() {\n    this.apiService.getUser(this.loginUserName).subscribe((data: User) => {\n      console.log(data);\n      this.activeUser= data;\n      if(this.activeUser.name === undefined) {\n        this.userExists= false;\n        this.message1= \"Gebruiker \" + this.loginUserName + \" is niet gekend!  Probeer opnieuw of maak een account aan.\";\n        return;\n      }\n        else {\n          this.userExists= true;\n          this.message0= \"Welkom \" + this.activeUser.name;\n          this.loginUserName=\"\";\n        }\n      this.apiService.getCategoriesOfUser(this.activeUser.id).subscribe((data: Category[]) => {\n        console.log(data);\n        this.categoriesOfUser = data;\n        if(data.length == 0) {\n          //this.categoryListEmpty = true;\n          this.message2 = \"U moet eerst een categorie aanmaken om een nieuwe notitie te kunnen toevoegen.\";\n        }\n        else{\n          //this.categoryListEmpty = false;\n          this.message2 = \"\";\n        }\n      })\n      this.apiService.getNotesOfUser(this.activeUser.id).subscribe((data: Note[]) => {\n        console.log(data);\n        //notesOfUser is de lijst met alle notities van de gebruiker\n        this.notesOfUser = data;\n        //notes is de lijst met weer te geven notities\n        this.notes=data;\n        if(data.length == 0) {\n          this.message1 = \"U heeft nog geen notities om weer te geven.\";\n        }\n        else{\n          //this.categoryListEmpty = false;\n          this.message1 = \"\";\n        }\n      })\n    })\n  }\n  \n  //velden voor de nieuwe account weergeven\n  addUserClicked: boolean = false;\n  newUserName: string = \"\";\n  addUserShowInputField(){\n    this.addUserClicked = true;\n    this.newUserName = this.loginUserName;\n    this.loginUserName = \"\";\n  }\n  //gebruiker toevoegen\n  addUser() {\n    this.loginUserName=\"\";\n    this.apiService.addUser(this.newUserName).subscribe((error) => {\n      console.log(error);\n      //zonder fout is de gebruiker geregistreerd\n      if(error != \"User already exists\") {\n        this.message1 = \"U bent geregistreerd, geef uw gebruikersnaam in om in te loggen.\";\n        this.loginUserName=this.newUserName;\n        this.addUserClicked = false;\n        this.message2 = \"Nieuwe gebruiker?  Maak een account aan.\"\n      }\n      else {\n        this.message2 = \"Deze loginnaam bestaat al, gelieve een andere te kiezen.\"\n      }\n    })\n  }\n  logOff(){\n    this.message0 = \"Welkom bij notesApp\";\n    this.message1 = \"Geef uw gebruikersnaam in om in te loggen.\";\n    this.message2 = \"Nieuwe gebruiker?  Maak een account aan.\";\n    this.activeUser = null;\n    this.categoriesOfUser = [];\n    this.notesOfUser = [];\n    this.notes = [];\n    this.userExists = false;\n  }\n  deleteUser(){\n    this.apiService.delUser(this.activeUser.id).subscribe((data) => {\n      console.log(data);\n    })\n    this.message0 = \"Welkom bij notesApp\";\n    this.message1 = \"Geef uw gebruikersnaam in om in te loggen.\";\n    this.message2 = \"Nieuwe gebruiker?  Maak een account aan.\";\n    this.activeUser = null;\n    this.categoriesOfUser = [];\n    this.notesOfUser = [];\n    this.notes = [];\n    this.userExists = false;\n  }\n\n  //eenmaal ingelogd\n  //velden voor de nieuwe categorie weergeven\n  addcategoryClicked: boolean = false;\n  categoryDescriptionNew: string = \"\";\n  setAddCategoryClicked(value) {\n    this.addcategoryClicked = value;\n  }  \n  //geselecteerde filter ophalen\n  noteCategory(event){\n    this.selectedNotesCategory= event.target.value;\n  }\n  addCategory() {\n    if(this.categoryColor==undefined){\n      this.message4=\"U moet een kleur selecteren\";\n      return;\n    }\n    if(this.categoryDescriptionNew==\"\"){\n      this.message3=\"U heeft geen categorie ingegeven\";\n      return;\n    }\n    this.apiService.addCategoryForUser(this.activeUser.id, this.categoryDescriptionNew,this.categoryColor).subscribe((data) => {\n      console.log(data);\n      this.apiService.getCategoriesOfUser(this.activeUser.id).subscribe((data: Category[]) => {\n        console.log(data);\n        this.categoriesOfUser = data;\n        //als alles goed ging is de lijst nu niet meer leeg\n        if(data.length == 0) {\n          //this.categoryListEmpty = true;\n          this.selectedNotesCategory = 1;\n          this.message1 = \"U heeft nog geen notities om weer te geven.\";\n          this.message2 = \"U moet eerst een categorie aanmaken om een nieuwe notitie te kunnen toevoegen.\";\n        }\n        else{\n          //this.categoryListEmpty = false;\n          this.message2 = \"\";\n          this.setAddCategoryClicked(false);\n          this.categoryDescriptionNew = \"\";\n        }\n      })\n    })\n  }\n  //haal de kleur van de categorie op\n  colorCategorie: string = \"\";\n  getColor(note): string {      \n    this.categoriesOfUser.forEach(category => {\n      if(category.id == note.categoryId) {\n      this.colorCategorie = category.color;\n      }\n    });\n    return this.colorCategorie;\n  }\n  \n  //velden voor de nieuwe notitie weergeven\n  addNoteClicked: boolean = false;\n  noteContent: string = \"\";\n  setAddNoteClicked(value) {\n    this.addNoteClicked = value;\n  }\n  addNote() {\n    if(this.selectedNotesCategory == -1) {\n      this.message6 = \"U moet een categorie selecteren\";\n      return;\n    }\n    if(this.noteContent == \"\") {\n      this.message5 =\"Uw heeft geen notitie ingegeven\";\n      return;\n    }\n    this.apiService.addNoteForUser(this.activeUser.id, this.selectedNotesCategory, this.noteContent).subscribe((data) => {\n      console.log(data);\n      this.selectedNotesCategory = -1;\n      this.noteContent = \"\";\n      this.apiService.getNotesOfUser(this.activeUser.id).subscribe((data: Note[]) => {\n        console.log(data);\n        //notesOfUser is de lijst met alle notities van de gebruiker\n        this.notesOfUser = data;\n        //notes is de lijst met weer te geven notities\n        this.notes=data;\n        if(data.length == 0) {\n          this.message1 = \"U heeft nog geen notities om weer te geven.\";\n        }\n        else{\n          this.setAddNoteClicked(false);\n          this.message1 = \"\";\n        }\n      })\n    })\n    }\n    //geselecteerde notitie om te bewerken of te verwijderen\n    messageSelectedNote: string = \"deze notitie kan worden bewerkt of verwijderd\"\n    selectedNote: Note;\n    changeNoteClicked: boolean = false;\n    setChangeNoteClicked(value) {\n      console.log(\"changeNote:\" + this.selectedNote.content + \" \" + this.selectedNote.categoryId);\n      this.noteContent = this.selectedNote.content\n      this.selectedNotesCategory = this.selectedNote.categoryId\n      this.addNoteClicked = value;\n      this.changeNoteClicked = value;\n    }\n    onNoteClick(note) {\n      this.selectedNote = note;\n      console.log(this.selectedNote.id);\n    }\n    changeNote(){      \n      if(this.selectedNotesCategory == -1) {\n        this.message6 = \"U moet een categorie selecteren\";\n        return;\n      }\n      if(this.noteContent == \"\") {\n        this.message5 =\"Uw heeft geen notitie ingegeven\";\n        return;\n      }\n      this.apiService.updateNoteOfUser(this.selectedNote.id, this.selectedNotesCategory, this.noteContent).subscribe((data) => {\n        console.log(data);\n        this.selectedNotesCategory = -1;\n        this.noteContent = \"\";\n        this.apiService.getNotesOfUser(this.activeUser.id).subscribe((data: Note[]) => {\n          console.log(data);\n          //notesOfUser is de lijst met alle notities van de gebruiker\n          this.notesOfUser = data;\n          //notes is de lijst met weer te geven notities\n          this.notes=data;\n          if(data.length == 0) {\n            this.message1 = \"Oeps, hier ging iets mis.\";\n          }\n          else{\n            this.setAddNoteClicked(false);\n            this.setChangeNoteClicked(false);\n            this.message1 = \"\";\n          }\n        })\n      })\n    }\n\n    deleteNote(){\n      this.apiService.delNoteOfUser(this.selectedNote.id).subscribe((data) => {\n        console.log(data);\n        this.apiService.getNotesOfUser(this.activeUser.id).subscribe((data: Note[]) => {\n          console.log(data);\n          //notesOfUser is de lijst met alle notities van de gebruiker\n          this.notesOfUser = data;\n          //notes is de lijst met weer te geven notities\n          this.notes=data;\n          if(data.length == 0) {\n            this.message1 = \"U heeft nog geen notities om weer te geven.\";\n          }\n          else{\n            this.setAddNoteClicked(false);\n            this.message1 = \"\";\n          }\n        })\n      })\n    }\n  \n\n  //Filters wissen\n  //lijst notities tonen\n  showAllNotes(){\n    this.notes= this.notesOfUser;\n    this.filterOn=false;\n    this.selectedFilterCategoryFilter = -1;\n  }\n  \n  //Filter op categorie\n  //geselecteerde filter ophalen\n  filterCategory(event){\n    this.selectedFilterCategoryFilter= event.target.value;\n  }\n  filterOn=false;\n  filteredNotes: Note[]=[];\n  filterNotes(){\n    this.substring=\"\";\n    //if(this.selectedFilterCategoryFilter == -1) {\n    //  this.filterOn=false;\n    //  return;\n    //}\n    //if(this.filterOn) {\n    //  this.notes= this.notesOfUser;\n    //}\n    this.notesOfUser.forEach(note => {\n      if(note.categoryId == this.selectedFilterCategoryFilter) {\n        this.filteredNotes.push(note);\n      }\n    });\n    this.notes=this.filteredNotes;\n    //this.filterOn=true;\n    this.filteredNotes=[];\n}\n\n  //Filter op substring\n  substring: string = \"\";\n  notesWithSubstring: Note[]=[];\n  searchNotesWithSubstring() {\n    this.notes.forEach(note => {\n      if(note.content.includes(this.substring)) {\n        this.notesWithSubstring.push(note);\n      }\n    });\n    this.notes=this.notesWithSubstring;\n    //this.substring=\"\";\n    this.notesWithSubstring=[];\n  }\n\n  //voor een eventuele administrator\n  //gebruikers\n  getUsers() {\n     this.apiService.getUsers().subscribe((data: User[]) => {\n       console.log(data);\n     })\n   }\n\n  //categoriën\n  getCategories() {\n    this.apiService.getCategories().subscribe((data: Category[]) => {\n      console.log(data);\n     })\n    }\n  //notities\n  getNotes() {\n    this.apiService.getNotes().subscribe((data: Note[]) => {\n      console.log(data);\n    })\n  }\n}\n","<h2>{{message0}}</h2>\n\n<!-- <button style=\"width: 200px\" (click)=\"getNotes()\">alle notities</button>\n<button style=\"width: 200px\" (click)=\"getCategories()\">alle categoriën</button>\n<button style=\"width: 200px\" (click)=\"getUsers()\">alle gebruikers</button> -->\n\n<div>  \n  <!-- loginscherm -->\n  <ng-container *ngIf=\"!userExists; then loginContent; else activeUserContent\">\n  </ng-container>\n  \n  <!-- loginscherm -->\n  <!-- gebruiker is nog niet ingelogd -->\n  <ng-template #loginContent>\n    <h4>{{message1}}</h4>\n    <label>Gebruikersnaam</label>\n    <br>\n    <input style=\"width: 196px\" type=\"text\" [(ngModel)]=\"loginUserName\"/>\n    <br>\n    <button style=\"width: 200px\" (click)=\"getUser()\">inloggen</button>\n    <h4>{{message2}}</h4>\n    <div>\n      <!-- nieuw account aanmaken -->\n      <ng-container *ngIf=\"!addUserClicked; then noNewUser; else newUser\">\n      </ng-container>\n\n      <!-- geen nieuw account aanmaken -->\n      <ng-template #noNewUser>\n        <button style=\"width: 200px\" (click)=\"addUserShowInputField()\">nieuwe account</button>\n      </ng-template>\n      \n      <!-- wel nieuw account aanmaken -->\n      <ng-template #newUser>\n        <label>gebruikersnaam</label>\n        <br>\n        <input  style=\"width: 196px\" type=\"text\" [(ngModel)]=\"newUserName\"/>\n        <button  style=\"width: 200px\"(click)=\"addUser()\">account aanmaken</button>\n      </ng-template>\n    </div>\n  </ng-template>\n  \n  <!-- userscherm -->\n  <!-- gebruiker is ingelogd -->\n  <ng-template #activeUserContent>\n    <table>\n      <tr>\n        <!--lijst van de notities, linkerkolom-->\n        <td valign=\"top\">\n          <table>\n            <tr>\n              <td style=\"width: 200px\">\n                <!-- nieuwe notitie aanmaken -->\n                <ng-container *ngIf=\"!addNoteClicked; then noNewNote; else newNote\">\n                </ng-container>\n                \n                <!-- geen nieuwe notitie aanmaken -->\n                <ng-template #noNewNote>\n                  <button style=\"width: 200px\" (click)=\"setAddNoteClicked(true)\" [disabled]=\"categoriesOfUser.length==0\">nieuwe notitie aanmaken</button>\n                  <button style=\"width: 200px\" (click)=\"setChangeNoteClicked(true)\" [disabled]=\"notesOfUser.length==0\">notitie bewerken</button>\n                  <button style=\"width: 200px\" (click)=\"deleteNote()\" [disabled]=\"notesOfUser.length==0\">notitie verwijderen</button>\n                </ng-template>\n                \n                <!-- wel nieuwe notitie aanmaken -->\n                <ng-template #newNote>\n                  <label>{{message5}}</label>\n                  <br>\n                  <input  style=\"width: 196px\" type=\"text\"  select=\"true\" [disabled]=\"categoriesOfUser.length==0\" [(ngModel)]=\"noteContent\"/>\n                  <br>\n                  <label>{{message6}}</label>\n                  <br>\n                  <select style=\"width: 200px\" [(ngModel)]=\"selectedNotesCategory\" (change)=\"noteCategory($event)\">\n                    <option value=-1 >--- Kies een categorie ---</option>\n                    <option *ngFor=\"let category of categoriesOfUser\" value={{category.id}}>{{ category.description }}</option>\n                  </select>\n                  <br>\n                    <!--notitie toevoegen of notitie wijzigen-->\n                    <ng-container *ngIf=\"!changeNoteClicked; then noNewNoteButton; else newNoteButton\">\n                    </ng-container>\n                \n                    <!-- button notitie maken -->\n                    <ng-template #noNewNoteButton>\n                    <button style=\"width: 200px\" (click)=\"addNote()\">notitie toevoegen</button>\n                    </ng-template>\n                    \n                    <!-- button notitie aanpassen -->\n                    <ng-template #newNoteButton>\n                      <button style=\"width: 200px\" (click)=\"changeNote()\">notitie wijzigen</button>\n                    </ng-template>\n                </ng-template>\n              </td>\n            </tr>\n            <tr>\n              <td><br></td>\n            </tr>\n            <tr>\n              <td style=\"width: 200px\">\n                <!-- nieuwe categorie aanmaken -->\n                <ng-container *ngIf=\"categoriesOfUser.length!=0 && !addcategoryClicked; then noNewCategory; else newCategory\">\n                </ng-container> \n                <!-- geen nieuwe categorie aanmaken -->\n                <ng-template #noNewCategory>\n                  <button style=\"width: 200px\"  (click)=\"setAddCategoryClicked(true)\">nieuwe categorie aanmaken</button>\n                </ng-template>\n  \n                <!-- wel nieuwe categorie aanmaken -->\n                <ng-template #newCategory>\n                  {{message3}}\n                  <br>\n                  <input   style=\"width: 196px\"  type=\"text\"  [(ngModel)]=\"categoryDescriptionNew\"/>\n                  <br>\n                  {{message4}}\n                  <br>\n                  <input   style=\"width: 196px\" [(colorPicker)]=\"categoryColor\" [style.background]=\"categoryColor\"/>\n                  <br>\n                  <button style=\"width: 200px\"  (click)=\"addCategory()\">maak categorie</button>\n                  <br>\n                </ng-template>   \n              </td>\n            </tr>\n            <tr>\n              <td><br></td>\n            </tr>\n            <tr>\n              <td><br></td>\n            </tr>\n            <tr>\n              <td>Filteren op categorie                \n              </td>\n            </tr>\n            <tr>\n              <td><select style=\"width: 200px\" [(ngModel)]=\"selectedFilterCategoryFilter\" (change)=\"filterCategory($event)\" [disabled]=\"notesOfUser.length==0\">\n                <option value=-1 >--- Kies een categorie ---</option>\n                <option [ngStyle]=\"{'background-color': category.color}\" *ngFor=\"let category of categoriesOfUser\" value={{category.id}}>{{ category.description }}</option>\n              </select>  \n              <br> \n              <button style=\"width: 200px\" (click)=\"filterNotes()\" [disabled]=\"notesOfUser.length==0\">filter toepassen</button>            \n              </td>\n            </tr>\n            <tr>\n              <td><br></td>\n            </tr>\n            <tr>\n              <td>Filteren op inhoud            \n              </td>\n            </tr>\n            <tr>\n              <td>\n                <input style=\"width: 196px\" [(ngModel)]=\"substring\" [disabled]=\"notesOfUser.length==0\"/>\n              <br> \n              <button style=\"width: 200px\" (click)=\"searchNotesWithSubstring()\" [disabled]=\"notesOfUser.length==0\">zoeken</button>            \n              </td>\n            </tr>\n            <tr>\n              <td><button style=\"width: 200px\" (click)=\"showAllNotes()\" [disabled]=\"notesOfUser.length==0\">alle filters wissen</button>\n              </td>\n            </tr>\n            <!--afmelden / uitschrijven-->\n            <tr>\n              <td><br></td>\n            </tr>\n            <tr>\n              <td><button style=\"width: 200px\" (click)=\"logOff()\">afmelden</button>            \n              </td>\n            </tr>\n            <tr>\n              <td><button style=\"width: 200px\" (click)=\"deleteUser()\">uitschrijven</button>\n              </td>\n            </tr>\n          </table>\n        </td>\n        <td valign=\"top\">\n          <!--lijst van de notities, rechterkolom-->\n          <table>\n            <td  style=\"width: 200px\" valign=\"top\">\n              <ng-container *ngIf=\"notesOfUser.length!=0; then notesToShow; else noNotesToShow\">\n              </ng-container>\n              <!--als de lijst niet leeg is-->\n              <ng-template #notesToShow> \n                <label>Klik op de notitie die u wenst te bewerken of verwijderen</label>\n                <div *ngFor=\"let note of notes\" >\n                <button [ngStyle]=\"{'background-color':getColor(note)}\" style=\"width: 500px\" (click)=\"onNoteClick(note)\">{{note.content}}</button>      \n                {{messageSelectedNote}}\n                </div>\n              </ng-template>\n               <!--als de lijst leeg is-->\n              <ng-template #noNotesToShow>\n                {{message1}}\n                <br>\n                {{message2}}\n              </ng-template>    \n              </td>\n          </table>\n        </td>\n      </tr>        \n    </table>\n   <!-- <app-notes [loginUser] = \"loginUser\"></app-notes> -->\n  </ng-template>\n  <!-- loginscherm -->\n  \n\n\n  <!-- op te kuisen -->\n  <table>\n    <tr>\n      <!-- <td>\n        <table>\n          <tr>\n              <li *ngFor=\"let note of notes;let i = index\" (click)=\"onNoteClick(note.id, note.categoryId, note.content)\">                             \n                <button [ngStyle]=\"{'background-color':getColor(note)}\" style=\"width: 50%\">{{note.content}}</button>\n                </li>\n          </tr>\n        </td>\n          <tr>\n            <td><hr>filteren op categorie:</td>\n          </tr>\n          <tr>\n            <td>\n              <select  [(ngModel)]=\"selectedFilterCategorie\" (change)=\"filterCategory($event)\">\n                <option value=-1 >--- Kies een categorie ---</option>\n                <option  *ngFor=\"let category of categoriesOfUser\" value={{category.id}}>{{ category.description }}</option>\n              </select>\n            </td>\n          </tr>\n          <tr>\n            <td><button (click)=\"filterCategoryToepassen()\">Filter toepassen</button></td>\n          </tr>  \n          \n          <tr>\n            <td><hr>Zoeken op content:</td>\n          </tr>\n          <tr>\n            <td>\n              <input [(ngModel)]=\"substring\"/>\n            </td>\n          </tr>\n          <tr>\n            <td><button (click)=\"NotitiesMetZoekstringZoeken()\">Notities zoeken</button></td>\n          </tr>      \n        </table>\n      </td>\n      <td>\n        <table>\n          <tr>\n            <td>Notitie toevoegen</td>\n            <td>\n              <input [(ngModel)]=\"content\"/>\n            </td>\n            <td>\n              <select [(ngModel)]=\"selectednotitieCategorie\" (change)=\"Notitiecategory($event)\">\n                <option value=\"-1\" >--- Kies een categorie ---</option>\n                <option  *ngFor=\"let category of categoriesOfUser\" value={{category.id}}>{{ category.description }}</option>\n              </select>\n            </td>\n          </tr>\n          <tr>\n            <td></td>\n            <td></td>\n            <td>\n              <div>  \n                <ng-container *ngIf=\"toevoegenNotitie;then buttonToevoegen;else buttonWijzigen\">\n                </ng-container>\n                <ng-template #buttonToevoegen>\n                  <button (click)=\"NotitieToevoegen()\">Notitie toevoegen</button>\n                </ng-template>\n                <ng-template #buttonWijzigen>\n                  <button (click)=\"NotitieWijzigen()\">Notitie wijzigen</button>\n                </ng-template>\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td colspan=\"3\">\n              <div *ngFor=\"let note of notes\">\n                <input type=\"text\" name={{note.id}} [disabled]= true  (ng-click)=\"onItemClick(note.id, note.categoryId, note.content)\" value=\"{{note.content}}\"/>\n                <button (click)=\"NotitieBewerken(note)\">Notitie bewerken</button>\n                <button (click)=\"NotitieVerwijderen(note.id)\">Notitie verwijderen</button>\n              </div>\n            </td>\n          </tr>\n        </table>   \n      </td>\n      <td>\n        <table>          \n          <ul height=\"10\" id=\"notesList\">\n            <li *ngFor=\"let note of notes;let i = index\" (click)=\"onItemClick(note.id, note.categoryId, note.content)\">             \n              {{note.content}}\n            </li>\n          </ul>\n        </table>\n      </td>\n      <td>\n        <table>    \n          <tr> \n            <td>\n            <option *ngFor=\"let note of notes;let i = index\" (click)=\"onItemClick(note.id, note.categoryId, note.content)\">             \n              {{note.content}}\n            </option>\n        </td>\n        </tr>\n        <tr>\n          <td>\n            <button>om een knop te hebben</button>\n          </td>\n        </tr>\n      </table>\n    </td> -->\n    <td>\n      <table>       \n      </table>\n    </td>\n    </tr>\n  </table>\n\n</div>\n<br>\n<br>\n\n\n\n<!-- <table>\n  <tr>\n    <td colspan=\"2\">Filteren op categorie</td>\n  </tr>\n  <tr>\n    <td>\n      <select (change)=\"filterCategory($event)\">\n        <option value=-1 >--- Kies een categorie ---</option>\n        <option  *ngFor=\"let category of categories\" value={{category.description}}>{{ category.description }}</option>\n      </select>\n    </td>\n    <td><button (click)=\"filterCategoryToepassen()\">Filter toepassen</button></td>\n  </tr>\n</table> -->\n\n<!--\n<button (click)=\"NotitieToevoegen()\">Notitie toevoegen</button>\n<button (click)=\"NotitieBewerken(7)\">Notitie bewerken</button>\n\n\n\n  <div *ngFor=\"let note of notes\">\n    <input type=\"text\" name={{note.id}} [disabled]= true value=\"{{note.id}} {{note.content}}  {{note.noteCategoryId}}\"/>\n    <button (click)=\"NotitieBewerken(note.id)\">Notitie bewerken</button>\n    <button (click)=\"NotitieVerwijderen(note.id)\">Notitie verwijderen</button>\n  </div>\n\n  <div *ngFor=\"let note of notesNaFilter\">\n    {{ note.content }}\n  </div>\n\n-->\n\n  <!-- <form [formGroup]=\"formCategory\" (ngSubmit)=\"submitCategory()\">\n    <div *ngFor=\"let category of categories\">\n      <input type=\"checkbox\" (change)=\"onChangeCategory(category.description, $event.target.checked)\" />\n      {{ category.description }}\n    </div>\n    <button>Filter toepassen</button>\n  </form> -->\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { APIService } from '../api.service';\n\ninterface User {\n  id: number;\n  name: string;\n}\ninterface Note {\n  id: number;\n  content: string;\n  userId: number;\n  categoryId: number;\n}\n\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  styleUrls: ['./notes.component.css']\n})\nexport class NotesComponent implements OnInit {\n\n  @Input() loginUser: User;\n\n  activeUser: User;\n \n  private apiService: APIService;\n  notes: Note[] = [];\n  constructor(ApiService: APIService) {\n    this.apiService = ApiService;\n  } \n\n  ngOnInit() {    \n    this.activeUser= this.loginUser;\n    this.notitieshalen();\n  }\n  notitieshalen(){\n\n  this.apiService.getNotesOfUser(this.loginUser.id).subscribe((data: Note[]) => {\n    console.log(data);\n    this.notes=data;\n  })\n}\n\n}\n","{{loginUser.name}}\n<br>\n{{activeUser.name}}\n<div *ngFor=\"let note of notes\">\n  <input type=\"text\" name={{note.id}} [disabled]= true value=\"{{note.content}}\"/>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}