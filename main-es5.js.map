{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","APIService","http","getUsers","get","route","getUser","userName","addUser","post","delUser","userId","getCategories","getCategoriesOfUser","addCategoriesForUser","description","delCategoriesOfUser","categoryId","getNotes","getNotesOfUser","getNotesOfUserWithCategoryFilter","addNoteForUser","content","delNoteOfUser","noteId","providedIn","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","apiService","title","actieveGebruiker","gebruikers","notities","notitiesGebruiker","notitiesGebruikerMetQueryOpNotes","categorien","zoekString","gevondenNotities","gevondenNotitiesFilter","categorienVanGebruiker","filterCategorie","apiServiceApp","subscribe","data","console","log","userid","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HomeComponent","ApiService","activeUserNames","loginUserName","validUser","toevoegenNotitie","selectednotitieCategorie","users","categories","categoriesOfUser","notesOfUser","notes","notesOfUserWithCategoryFilter","categoryFilter","filterAan","notesMetCategorieFilter","categorieNotitie","substring","notesMetSubstring","addUser_userName","addCategoriesForUser_description","deleteCategorie_idOfUser","addCategorie_idOfUser","contentNieuweNotitie","loginUser","name","undefined","message","alert","event","target","value","forEach","note","Number","push","includes","loginUserId","inloggen","filterCategory","filterCategoryToepassen","NotitiesMetZoekstringZoeken","Notitiecategory","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable, Component } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class APIService {\n\n  route;\n  \n  constructor(private http: HttpClient) { \n    this.route = 'https://jensjorisdecorte-backend-example-4.glitch.me'\n  }\n\n  //\n  //bewerkingen op \"/users\"\n  //\n  \n  //haal de lijst van alle gebruikers op\n  getUsers = () => {\n    return this.http.get(this.route + \"/users\");\n  }\n  //haal een gebruiker op\n  getUser = (userName: string) => {\n    return this.http.get(this.route + \"/users/\"+userName);\n  }\n  //voeg een gebruiker toe\n  addUser = (userName: string) => {\n    return this.http.post(this.route + \"/users\", {userName: userName});\n  }\n  //verwijder een gebruiker\n  delUser = (userId: number) => {\n    return this.http.delete(this.route + \"/users?userId=\" + userId);\n  }\n\n  //\n  //bewerkingen op \"/Categories\"\n  //\n\n  //haal de lijst van alle categorien op\n  getCategories = () => {\n    return this.http.get(this.route + \"/categories\");\n  }\n  //haal de lijst van alle categorien van een gebruiker op\n  getCategoriesOfUser = (userId: number) => {\n    return this.http.get(this.route + \"/users/\"+userId+\"/categories\");\n  }\n  //voeg een categorie toe voor een bepaalde gebruiker\n  addCategoriesForUser = ( userId: number, description: string) => {\n    return this.http.post(this.route + \"/users/\"+userId+\"/categories\", {description: description});\n  }\n  //verwijder een gebruiker\n  delCategoriesOfUser = (categoryId: number) => {\n    return this.http.delete(this.route + \"/categories?categoryId=\" + categoryId);\n  }\n\n  //\n  //bewerkingen op \"/notes\"\n  //\n  \n  //haal de lijst van alle notities op\n  getNotes = () => {\n    return this.http.get(this.route + \"/notes\");\n  }\n  //haal de lijst van alle notities van een gebruiker op\n  getNotesOfUser = (userId: number) => {\n    return this.http.get(this.route + \"/users/\"+userId+\"/notes\");\n  }\n  //haal de lijst van alle notities van een gebruiker op\n  getNotesOfUserWithCategoryFilter = (userId: number, categoryId: string) => {\n    return this.http.get(this.route + \"/users/\"+userId+\"/categories/\"+categoryId+\"/notes\");\n  }\n  //voeg een notitie toe voor een bepaalde gebruiker\n  addNoteForUser = ( userId: number, categoryId: string, content: string) => {\n    return this.http.post(this.route + \"/users/\"+userId+\"/categories/\"+categoryId+\"/notes\", {content: content});\n  }\n  //voeg een notitie toe voor een bepaalde gebruiker\n  delNoteOfUser = ( noteId: number) => {\n    return this.http.delete(this.route + \"/notes?noteId=\" + noteId);\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\n  { path: 'home', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormBuilder } from '@angular/forms';\nimport { APIService } from './api.service';\nimport { HomeComponent } from './home/home.component';\n\ninterface User\n{\n  id: Number;\n  name: String;\n}\ninterface Gebruiker\n{\n  id: Number;\n  name: String;\n}\ninterface Notitie\n{\n  id: Number;\n  content: String;\n  userId: Number;\n  noteCategoryId: Number;\n}\ninterface Category\n{\n  id: Number;\n  description: String;\n  userId: Number;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent \n{\n  title = 'NotesApp';\n  private apiServiceApp;\n  route;\n  actieveGebruiker = \"Gina\";\n\n  nieuweGebruiker: string; //naam van een nieuw toe te voegen gebruiker\n  gebruiker: string;\n\n  messageGebruikerToevoegen;\n  messageGebruikerBestaat;\n  messageGebruikerVerwijderen;\n\n  gebruikers: Gebruiker[] = [];\n  notities: Notitie[] = [];\n  notitiesGebruiker: Notitie[] = [];\n  notitiesGebruikerMetQueryOpNotes: Notitie[] = [];\n  categorien: Category[] =  [];\n\n  naamToevoegen;\n  naamOpzoeken;\n  naamVerwijderen;\n  zoekString = \"Marc\";\n\n  naamNotitieToevoegen;\n  naamNotitieTonen;\n  inhoudNotitieToevoegen;  \n  categorieNotitieToevoegen;\n  \n  gevondenNotities: Notitie[] = [];\n  gevondenNotitiesFilter: Notitie[] = [];\n  categorienVanGebruiker: Category[] = [];\n  omschrijvingCategorieToevoegen;\n  naamCategorieToevoegen;\n  filterCategorie=\"prive\";\n\n  constructor(apiService: APIService)\n  {\n    this.apiServiceApp = apiService;\n    //this.vulDatabaseMetMockDataUsers();\n    //this.vulDatabaseMetMockDataCategories();\n    //this.vulDatabaseMetMockDataNotes();\n  }  \n  \n  ngOnInit(): void {\n   }\n\n  // //\n  // //bewerkingen op \"/users\"\n  // //\n  \n  // //haal de lijst van alle gebruikers op\n  // lijstGebruikers = () => {\n  //   this.apiServiceApp.getUsers().subscribe((data: Gebruiker[]) => {\n  //     console.log(data);   \n  //     this.gebruikers = data;\n  //     })\n  // }\n  // //voeg een gebruiker toe\n  // toevoegenGebruiker = () => {\n  //   this.apiServiceApp.addUser(this.nieuweGebruiker).subscribe((data) => {\n  //     console.log(data);\n  //     if(data.error == null)\n  //       this.messageGebruikerToevoegen = data.success;\n  //     else\n  //       this.messageGebruikerToevoegen = data.error;\n  //   });\n  //   this.nieuweGebruiker = \"\";\n  // }\n  // //checkt of een gebruiker reeds bestaat\n  // bestaatGebruiker = () =>{\n  //   this.apiServiceApp.getUser(this.gebruiker).subscribe((data) => {\n  //     console.log(data);\n  //     if(data.error == null)\n  //       this.messageGebruikerBestaat = data.success;\n  //     else\n  //       this.messageGebruikerBestaat = data.error;\n  //   });    \n  //   this.gebruiker = \"\";\n  // }\n  // //verwijder een gebruiker\n  // verwijderenGebruiker = () => {\n  //   this.apiServiceApp.deleteUser(this.naamVerwijderen).subscribe((data) => {\n  //       console.log(data);\n  //       if(data.error == null)\n  //         this.messageGebruikerVerwijderen = data.success;\n  //       else\n  //         this.messageGebruikerVerwijderen = data.error;\n  //   });\n  //   this.lijstGebruikers();\n  //   this.naamVerwijderen = \"\";\n  // }\n\n  // //\n  // //bewerkingen op \"/notescategory\"\n  // //\n\n  // //haal de lijst van alle categorien op\n  // lijstCategorie = () =>{\n  //   this.apiServiceApp.getCategories().subscribe((data: Category[]) => {\n  //     console.log(data);\n  //     this.categorien = data;\n  //   })\n  // }\n  // //haal de lijst van alle categorien op\n  // lijstCategorienVanGebruiker = () =>{\n  //   this.apiServiceApp.getCategoriesFromUser(this.actieveGebruiker).subscribe((data: Category[]) => {\n  //     console.log(data);\n  //     this.categorienVanGebruiker = data;\n  //   })\n  // }\n  // //voeg een categorie toe\n  // toevoegenCategorie = () =>{\n  //   this.apiServiceApp.addCategory(this.naamCategorieToevoegen, this.omschrijvingCategorieToevoegen).subscribe((data) => {\n  //     console.log(data);\n  //     if(data.error == null)\n  //       this.messageGebruikerBestaat = data.success;\n  //     else\n  //       this.messageGebruikerBestaat = data.error;\n  //   });    \n  // }\n\n  // //\n  // //bewerkingen op \"/Notes\"\n  // //\n\n  // //haal de lijst van alle notities op\n  // lijstNotities = () => {\n  //   this.apiServiceApp.getNotes().subscribe((data: Notitie[]) => {\n  //        console.log(data);\n  //       this.notities = data;\n  //     })\n  // }\n  // //haal de lijst van alle notities op voor een bepaalde gebruiker\n  // lijstNotitiesVanGebruiker = () => {\n  //   this.notitiesVanGebruikerFilterenOpCategorie();\n  //   //this.apiServiceApp.getNotesFromUser(this.actieveGebruiker).subscribe((data: Notitie[]) => {\n  //    // console.log(data);\n  //    //this.notitiesGebruiker = data;\n  //   //});\n  //   this.naamNotitieTonen = \"\";\n  // }\n  // //voeg een notitie toe een bepaalde gebruiker\n  // toevoegenNotitieVoorGebruiker = () => {\n  //   this.apiServiceApp.addNoteForUser(this.naamNotitieToevoegen, this.inhoudNotitieToevoegen,this.categorieNotitieToevoegen).subscribe((data) => {\n  //     console.log(data);\n  //   });\n  //   this.naamNotitieToevoegen = \"\";\n  //   this.inhoudNotitieToevoegen = \"\";\n  //   this.categorieNotitieToevoegen = \"\";\n  // }\n  // notitiesVanGebruikerDieZoekStringBevatten() {\n  //   this.notitiesVanGebruikerFilterenOpCategorie();\n  //   // this.apiServiceApp.getNotesWithSubstringFromUser(this.actieveGebruiker, this.zoekString).subscribe((data: Notitie[]) => {\n  //   //   console.log(data);\n  //   //  this.gevondenNotities = data;\n  //   // });\n  //   this.zoekString = \"\";\n  // }\n  // notitiesVanGebruikerFilterenOpCategorie() {\n  //   this.apiServiceApp.getNotesWithSubstringFromUser(this.actieveGebruiker, this.zoekString, this.filterCategorie).subscribe((data: Notitie[]) => {\n  //     console.log(data);\n  //    this.gevondenNotitiesFilter = data;\n  //   });\n  // }\n  \n  userid;\n  //nep data om de functies te controleren\n    vulDatabaseMetMockDataUsers() {\n\n      this.apiServiceApp.addUser(\"Gina\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Gina\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"prive\").subscribe((data) => {\n          console.log(data);})\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Chantal\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Chantal\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"prive\").subscribe((data) => {\n          console.log(data);})\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})        \n        })\n      })\n      this.apiServiceApp.addUser(\"Sonja\").subscribe((data) => {\n        console.log(data);\n      this.apiServiceApp.getUser(\"Sonja\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Thierry\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Karel\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Karel\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"prive\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Tim\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Marie\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Marie\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Jonathan\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Ilse\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Ilse\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"dringend\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n      this.apiServiceApp.addUser(\"Isabel\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Peter\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"David\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Geert\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addUser(\"Tom\").subscribe((data) => {\n        console.log(data);\n        this.apiServiceApp.getUser(\"Tom\").subscribe((data: User)=>{\n        this.userid=data.id;\n        this.apiServiceApp.addCategoriesForUser(this.userid, \"prive\").subscribe((data) => {\n          console.log(data);})\n        })\n      })\n    }\n    vulDatabaseMetMockDataCategories() {\n    }\n    vulDatabaseMetMockDataNotes() {\n      this.apiServiceApp.addNoteForUser(\"Gina\", \"bureau kuisen\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Gina\", \"facebook checken\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Gina\", \"boodschappen doen\",\"prive\").subscribe((data) => {\n        console.log(data);})          \n      this.apiServiceApp.addNoteForUser(\"Chantal\", \"bureau kuisen\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Chantal\", \"facebook checken\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Chantal\", \"dochter bellen\",\"prive\").subscribe((data) => {\n        console.log(data);})        \n      this.apiServiceApp.addNoteForUser(\"Sonja\", \"facturen bezorgen\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Karel\", \"personeel beoordelen\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Karel\", \"avondje uit\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Marie\", \"les gaan volgen\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Tom\", \"vrouw bellen\",\"prive\").subscribe((data) => {\n        console.log(data);})\n      this.apiServiceApp.addNoteForUser(\"Ilse\", \"infobrochure verspreiden\",\"dringend\").subscribe((data) => {\n        console.log(data);})\n    }\n}","  \n<router-outlet></router-outlet>","\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, FormControl } from '@angular/forms';\n\nimport { APIService } from '../api.service';\n\ninterface User {\n  id: number;\n  name: string;\n}\ninterface Note {\n  id: number;\n  content: string;\n  userId: number;\n  categoryId: number;\n}\ninterface Category {\n  id: number;\n  description: string;\n  userId: number;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n\n  private apiService: APIService;\n    \n    //ingelogde gebruiker\n    activeUserNames = \"Gina\";\n\n\n    loginUser: User;\n    loginUserName= this.activeUserNames;\n    loginUserId;\n    validUser: boolean = false;\n    message;\n    toevoegenNotitie= true;\n    selectednotitieCategorie=\"-1\";\n    //lijst van gebruikers\n    users: User[] = [];\n    //lijst van categoriën\n    categories: Category[] = [];\n    categoriesOfUser: Category[] = [];\n    //lijst van notities\n    notesOfUser: Note[] = [];\n    notes: Note[] = [];\n    notesOfUserWithCategoryFilter: Note[] = [];\n\n  constructor(ApiService: APIService) {\n    this.apiService = ApiService;\n  } \n\n  inloggen(){\n    //gebruiker ophalen\n    this.apiService.getUser(this.loginUserName).subscribe((data: User) => {\n      console.log(data);\n      this.loginUser= data;\n      if(this.loginUser.name === undefined) {\n        this.validUser= false;\n        this.message= \"Gebruiker \" + this.loginUserName + \" is niet gekend!\";\n        return;\n      }\n        else {\n          this.validUser= true;\n          this.message= \"Welkom \" + this.loginUser.name +\", met id \"+ this.loginUser.id;\n        }\n  })\n  this.apiService.getCategoriesOfUser(this.loginUser.id).subscribe((data: Category[]) => {\n    console.log(data);\n    this.categoriesOfUser = data;\n  })\n  this.apiService.getNotesOfUser(this.loginUser.id).subscribe((data: Note[]) => {\n    console.log(data);\n    this.notesOfUser = data;\n    this.notes=data;\n  })\n}\nnieuweGebruiker() {\n  alert(\"aanmelden\");\n}\n  \n  categoryFilter=\"-1\";\n  filterAan=false;\n  notesMetCategorieFilter: Note[]=[];\n  filterCategory(event){\n    this.categoryFilter= event.target.value;\n  }\n\n  filterCategoryToepassen(){\n      if(this.filterAan) {\n        this.notes= this.notesOfUser;\n      }\n      if(this.categoryFilter == \"-1\") {\n        this.filterAan=false;\n        return;\n      }\n      this.notes.forEach(note => {\n        if(note.categoryId == Number(this.categoryFilter)) {\n          this.notesMetCategorieFilter.push(note);\n        }\n      });\n      this.notes=this.notesMetCategorieFilter;\n      this.filterAan=true;\n      this.notesMetCategorieFilter=[];\n  }\n  content=\"\";\n  categorieNotitie=\"-1\";\n  Notitiecategory(event){\n    this.categorieNotitie= event.target.value;\n  }\n  NotitieToevoegen(){\n    if(this.categorieNotitie == \"-1\") {\n      alert(\"U koos geen categorie\");\n      return;\n    }\n      this.apiService.getNotesOfUser(this.loginUser.id).subscribe((data: Note[]) => {\n        console.log(data);\n        this.apiService.addNoteForUser(this.loginUser.id, this.categorieNotitie, this.content).subscribe((data) => {\n          console.log(data);\n        })\n        this.notesOfUser = data;\n      })\n    }\n\n    substring=\"\";\n    notesMetSubstring: Note[]=[];\n    NotitiesMetZoekstringZoeken() {\n      this.notes.forEach(note => {\n        if(note.content.includes(this.substring)) {\n          this.notesMetSubstring.push(note);\n        }\n      });\n      this.notes=this.notesMetSubstring;\n      this.substring=\"\";\n      this.notesMetSubstring=[];\n    }\n    NotitieBewerken(note) {\n      this.toevoegenNotitie=false;\n      this.content=note.content;\n      this.selectednotitieCategorie= note.categoryId;\n    }\n    NotitieWijzigen() {\n      alert(this.categorieNotitie);\n      this.toevoegenNotitie=true;\n    }\n    NotitieVerwijderen(noteId) {\n      this.apiService.getNotesOfUser(this.loginUser.id).subscribe((data: Note[]) => {\n        console.log(data);\n        this.apiService.delNoteOfUser(noteId).subscribe((data) => {\n          console.log(data);\n        })\n        this.notesOfUser = data;\n      })\n    }\n\n//moeten van invoervelden komen:\naddUser_userName = \"Tina\";\naddCategoriesForUser_description= \"test1\";\ndeleteCategorie_idOfUser: number = 10;\naddCategorie_idOfUser:number = 1;\ncontentNieuweNotitie:string = \"nieuwe notitie van Gina met cat 6\"\n  //apiservice\n    //gebruikers ophalen\n  getUsers() {\n    this.apiService.getUsers().subscribe((data: User[]) => {\n      console.log(data);\n      this.users = data;\n    })\n  }\n  getUser(userName) {\n    this.apiService.getUser(userName).subscribe((data: User) => {\n      console.log(data);\n      this.loginUser= data;\n      // this.loginUserId = data.id;\n      // this.loginUserName = data.name;\n    });\n  }\n  //gebruiker toevoegen\n  addUser() {\n    this.apiService.addUser(this.addUser_userName).subscribe((data) => {\n      console.log(data);\n    })\n  }\n  //gebruiker verwijderen\n  delUser() {\n    this.apiService.delUser(this.loginUserId).subscribe((data) => {\n      console.log(data);\n    })\n  }\n\n  //categoriën\n  //catergoriën ophalen\n  getCategories() {\n    this.apiService.getCategories().subscribe((data: Category[]) => {\n      console.log(data);\n      this.categories = data;\n    })\n  }\n  //categoriën van de actieve gebruiker ophalen\n  getCategoriesOfUser(userId) {\n    this.apiService.getCategoriesOfUser(userId).subscribe((data: Category[]) => {\n      console.log(data);\n      this.categoriesOfUser = data;\n    })\n  }\n  //categorie voor de actieve gebruiker toevoegen\n  addCategoriesForUser() {\n    this.apiService.addCategoriesForUser(this.loginUserId, this.addCategoriesForUser_description).subscribe((data) => {\n      console.log(data);\n    })\n  }\n  //categoriën van de actieve gebruiker verwijderen en dus ook de bijhorende notities\n  deleteCategoriesOfUser(){\n    this.apiService.delCategoriesOfUser(this.deleteCategorie_idOfUser).subscribe((data) => {\n      console.log(data);\n    })\n  }\n  //notities\n  getNotes() {\n    this.apiService.getNotes().subscribe((data: Note[]) => {\n      console.log(data);\n      this.notes = data;\n    })\n  }\n  getNotesOfUser(userId) {\n    this.apiService.getNotesOfUser(userId).subscribe((data: Note[]) => {\n      console.log(data);\n      this.notesOfUser = data;\n    })\n  }\n  addNoteForUser(userId, categoryId, content) {\n    this.apiService.addNoteForUser(userId, categoryId,content).subscribe((data) => {\n      console.log(data);\n    })\n  }\n    //opgekuisd\n\n    ngOnInit() {\n      // this.getUser();\n      // this.getCategories();\n      // this.getNotes();\n      // //Catergorie\n      // this.formCategory = this.formBuilder.group({\n      //   description: this.formBuilder.array([])\n      // });\n      // //Notities\n      // this.formNote = this.formBuilder.group({\n      //   content: this.formBuilder.array([])\n      // });\n    }\n\n\n  // onChangeCategory(description: string, isChecked: boolean) {\n  //   const categories = (this.formCategory.controls.description as FormArray);\n\n  //   if (isChecked) {\n  //     categories.push(new FormControl(description));\n  //   } \n  //   else {\n  //     const index = categories.controls.findIndex(x => x.value === description);\n  //     categories.removeAt(index);\n  //   }\n  // }\n  \n  // onChangeNote(content: string, isChecked: boolean) {\n  //   const notes = (this.formNote.controls.content as FormArray);\n\n  //   if (isChecked) {\n  //     notes.push(new FormControl(content));\n  //   } \n  //   else {\n  //     const index = notes.controls.findIndex(x => x.value === content);\n  //     notes.removeAt(index);\n  //   }\n  // }\n\n\n  // submitCategory() {\n  //   this.notesNaFilter=[];\n  //   this.filters = this.formCategory.value.description;\n  //   this.filters.forEach((filter) => {\n  //     this.OphalenNotitie(filter);\n  //     console.log(this.formCategory.value.description);\n  //   });\n  // }\n  // submitNote() {\n  //   console.log(this.formNote.value.content);\n  // }\n}\n","<h1>Welkom, gelieve uw gebruikersnaam op te geven</h1>\n\n{{message}}\n\n<br>\n<br>\n<input type=\"text\" [(ngModel)]=\"loginUserName\"/>\n<button (click)=\"inloggen()\">Notities weergeven</button>\n<br>\n<br>\n<div>  \n  <ng-container *ngIf=\"validUser;then activeUserContent;else newUserContent\">\n  </ng-container>\n  \n  <ng-template #activeUserContent>\n   <!--<app-user [loginUser] = \"loginUser\">hey</app-user>--> \n  </ng-template>\n\n  <ng-template #newUserContent>\n    {{message}}\n    <br>\n    <button (click)=\"nieuweGebruiker()\">Nieuwe gebruiker</button>\n  </ng-template>\n  \n  <table>\n    <tr>\n      <td>\n        <table>\n          <tr>\n            <td><hr>filteren op categorie:</td>\n          </tr>\n          <tr>\n            <td>\n              <select (change)=\"filterCategory($event)\">\n                <option value=-1 >--- Kies een categorie ---</option>\n                <option  *ngFor=\"let category of categoriesOfUser\" value={{category.id}}>{{ category.description }}</option>\n              </select>\n            </td>\n          </tr>\n          <tr>\n            <td><button (click)=\"filterCategoryToepassen()\">Filter toepassen</button></td>\n          </tr>  \n          \n          <tr>\n            <td><hr>Zoeken op content:</td>\n          </tr>\n          <tr>\n            <td>\n              <input [(ngModel)]=\"substring\"/>\n            </td>\n          </tr>\n          <tr>\n            <td><button (click)=\"NotitiesMetZoekstringZoeken()\">Notities zoeken</button></td>\n          </tr>      \n        </table>\n      </td>\n      <td>\n        <table>\n          <tr>\n            <td>Notitie toevoegen</td>\n            <td>\n              <input [(ngModel)]=\"content\"/>\n            </td>\n            <td>\n              <select [(ngModel)]=\"selectednotitieCategorie\" (change)=\"Notitiecategory($event)\">\n                <option value=\"-1\" >--- Kies een categorie ---</option>\n                <option  *ngFor=\"let category of categoriesOfUser\" value={{category.id}}>{{ category.description }}</option>\n              </select>\n            </td>\n          </tr>\n          <tr>\n            <td></td>\n            <td></td>\n            <td>\n              <div>  \n                <ng-container *ngIf=\"toevoegenNotitie;then buttonToevoegen;else buttonWijzigen\">\n                </ng-container>\n                <ng-template #buttonToevoegen>\n                  <button (click)=\"NotitieToevoegen()\">Notitie toevoegen</button>\n                </ng-template>\n                <ng-template #buttonWijzigen>\n                  <button (click)=\"NotitieWijzigen()\">Notitie wijzigen</button>\n                </ng-template>\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td colspan=\"3\">\n              <div *ngFor=\"let note of notes\">\n                <input type=\"text\" name={{note.id}} [disabled]= true value=\"{{note.content}}\"/>\n                <button (click)=\"NotitieBewerken(note)\">Notitie bewerken</button>\n                <button (click)=\"NotitieVerwijderen(note.id)\">Notitie verwijderen</button>\n              </div></td>\n          </tr>\n        </table>   \n      </td>\n\n    </tr>\n  </table>\n  \n\n<!-- \n</div>\n<br>\n<br>\nUsers\n<br>\n<br>\n<button (click)=\"getUsers()\">Lijst gebruikers</button>\n<button (click)=\"getUser(naam)\">Id gebruiker</button>\n<button (click)=\"addUser()\">Gebruikers toevoegen</button>\n<button (click)=\"delUser()\">Verwijder gebruiker</button>\n<br>\n<br>\ncategories <br>\n<br>\n<button (click)=\"getCategories()\">Lijst categoriën</button>\n<button (click)=\"getCategoriesOfUser(loginUser.id )\">Lijst categoriën van {{loginUser.name}}</button>\n<button (click)=\"addCategoriesForUser()\">Categorie toevoegen</button>\n<button (click)=\"deleteCategoriesOfUser()\">Verwijder Categorie</button>\n<br>\n<br>\nNotes <br>\n<br>\n<button (click)=\"getNotes()\">Lijst notities</button>\n<button (click)=\"getNotesOfUser()\">Lijst notities van {{loginUser.name}}</button>\n<button (click)=\"addNoteForUser()\">Notitie  toevoegen</button> -->\n\n\n\n<!-- <table>\n  <tr>\n    <td colspan=\"2\">Filteren op categorie</td>\n  </tr>\n  <tr>\n    <td>\n      <select (change)=\"filterCategory($event)\">\n        <option value=-1 >--- Kies een categorie ---</option>\n        <option  *ngFor=\"let category of categories\" value={{category.description}}>{{ category.description }}</option>\n      </select>\n    </td>\n    <td><button (click)=\"filterCategoryToepassen()\">Filter toepassen</button></td>\n  </tr>\n</table> -->\n\n<!--\n<button (click)=\"NotitieToevoegen()\">Notitie toevoegen</button>\n<button (click)=\"NotitieBewerken(7)\">Notitie bewerken</button>\n\n\n\n  <div *ngFor=\"let note of notes\">\n    <input type=\"text\" name={{note.id}} [disabled]= true value=\"{{note.id}} {{note.content}}  {{note.noteCategoryId}}\"/>\n    <button (click)=\"NotitieBewerken(note.id)\">Notitie bewerken</button>\n    <button (click)=\"NotitieVerwijderen(note.id)\">Notitie verwijderen</button>\n  </div>\n\n  <div *ngFor=\"let note of notesNaFilter\">\n    {{ note.content }}\n  </div>\n\n-->\n\n  <!-- <form [formGroup]=\"formCategory\" (ngSubmit)=\"submitCategory()\">\n    <div *ngFor=\"let category of categories\">\n      <input type=\"checkbox\" (change)=\"onChangeCategory(category.description, $event.target.checked)\" />\n      {{ category.description }}\n    </div>\n    <button>Filter toepassen</button>\n  </form> -->\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}